/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/yaml/browser/dist/compose/compose-collection.js":
/*!**********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/compose-collection.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeCollection: () => (/* binding */ composeCollection)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nodes/YAMLMap.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLMap.js\");\n/* harmony import */ var _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../nodes/YAMLSeq.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLSeq.js\");\n/* harmony import */ var _resolve_block_map_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resolve-block-map.js */ \"./node_modules/yaml/browser/dist/compose/resolve-block-map.js\");\n/* harmony import */ var _resolve_block_seq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resolve-block-seq.js */ \"./node_modules/yaml/browser/dist/compose/resolve-block-seq.js\");\n/* harmony import */ var _resolve_flow_collection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./resolve-flow-collection.js */ \"./node_modules/yaml/browser/dist/compose/resolve-flow-collection.js\");\n\n\n\n\n\n\n\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? (0,_resolve_block_map_js__WEBPACK_IMPORTED_MODULE_4__.resolveBlockMap)(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? (0,_resolve_block_seq_js__WEBPACK_IMPORTED_MODULE_5__.resolveBlockSeq)(CN, ctx, token, onError, tag)\n            : (0,_resolve_flow_collection_js__WEBPACK_IMPORTED_MODULE_6__.resolveFlowCollection)(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap.tagName && expType === 'map') ||\n        (tagName === _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__.YAMLSeq.tagName && expType === 'seq') ||\n        !expType) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(res)\n        ? res\n        : new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__.Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/compose-collection.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/compose-doc.js":
/*!***************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/compose-doc.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeDoc: () => (/* binding */ composeDoc)\n/* harmony export */ });\n/* harmony import */ var _doc_Document_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/Document.js */ \"./node_modules/yaml/browser/dist/doc/Document.js\");\n/* harmony import */ var _compose_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compose-node.js */ \"./node_modules/yaml/browser/dist/compose/compose-node.js\");\n/* harmony import */ var _resolve_end_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolve-end.js */ \"./node_modules/yaml/browser/dist/compose/resolve-end.js\");\n/* harmony import */ var _resolve_props_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resolve-props.js */ \"./node_modules/yaml/browser/dist/compose/resolve-props.js\");\n\n\n\n\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new _doc_Document_js__WEBPACK_IMPORTED_MODULE_0__.Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = (0,_resolve_props_js__WEBPACK_IMPORTED_MODULE_3__.resolveProps)(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? (0,_compose_node_js__WEBPACK_IMPORTED_MODULE_1__.composeNode)(ctx, value, props, onError)\n        : (0,_compose_node_js__WEBPACK_IMPORTED_MODULE_1__.composeEmptyNode)(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = (0,_resolve_end_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnd)(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/compose-doc.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/compose-node.js":
/*!****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/compose-node.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeEmptyNode: () => (/* binding */ composeEmptyNode),\n/* harmony export */   composeNode: () => (/* binding */ composeNode)\n/* harmony export */ });\n/* harmony import */ var _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Alias.js */ \"./node_modules/yaml/browser/dist/nodes/Alias.js\");\n/* harmony import */ var _compose_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compose-collection.js */ \"./node_modules/yaml/browser/dist/compose/compose-collection.js\");\n/* harmony import */ var _compose_scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compose-scalar.js */ \"./node_modules/yaml/browser/dist/compose/compose-scalar.js\");\n/* harmony import */ var _resolve_end_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resolve-end.js */ \"./node_modules/yaml/browser/dist/compose/resolve-end.js\");\n/* harmony import */ var _util_empty_scalar_position_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util-empty-scalar-position.js */ \"./node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js\");\n\n\n\n\n\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = (0,_compose_scalar_js__WEBPACK_IMPORTED_MODULE_2__.composeScalar)(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = (0,_compose_collection_js__WEBPACK_IMPORTED_MODULE_1__.composeCollection)(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: (0,_util_empty_scalar_position_js__WEBPACK_IMPORTED_MODULE_4__.emptyScalarPosition)(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = (0,_compose_scalar_js__WEBPACK_IMPORTED_MODULE_2__.composeScalar)(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_0__.Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = (0,_resolve_end_js__WEBPACK_IMPORTED_MODULE_3__.resolveEnd)(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/compose-node.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/compose-scalar.js":
/*!******************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/compose-scalar.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeScalar: () => (/* binding */ composeScalar)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _resolve_block_scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolve-block-scalar.js */ \"./node_modules/yaml/browser/dist/compose/resolve-block-scalar.js\");\n/* harmony import */ var _resolve_flow_scalar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resolve-flow-scalar.js */ \"./node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js\");\n\n\n\n\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? (0,_resolve_block_scalar_js__WEBPACK_IMPORTED_MODULE_2__.resolveBlockScalar)(token, ctx.options.strict, onError)\n        : (0,_resolve_flow_scalar_js__WEBPACK_IMPORTED_MODULE_3__.resolveFlowScalar)(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(res) ? res : new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__.Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__.Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/compose-scalar.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/composer.js":
/*!************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/composer.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Composer: () => (/* binding */ Composer)\n/* harmony export */ });\n/* harmony import */ var _doc_directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/directives.js */ \"./node_modules/yaml/browser/dist/doc/directives.js\");\n/* harmony import */ var _doc_Document_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../doc/Document.js */ \"./node_modules/yaml/browser/dist/doc/Document.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/yaml/browser/dist/errors.js\");\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _compose_doc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compose-doc.js */ \"./node_modules/yaml/browser/dist/compose/compose-doc.js\");\n/* harmony import */ var _resolve_end_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resolve-end.js */ \"./node_modules/yaml/browser/dist/compose/resolve-end.js\");\n\n\n\n\n\n\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new _errors_js__WEBPACK_IMPORTED_MODULE_2__.YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new _errors_js__WEBPACK_IMPORTED_MODULE_2__.YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new _doc_directives_js__WEBPACK_IMPORTED_MODULE_0__.Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_3__.isCollection)(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_3__.isPair)(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = (0,_compose_doc_js__WEBPACK_IMPORTED_MODULE_4__.composeDoc)(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new _errors_js__WEBPACK_IMPORTED_MODULE_2__.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new _errors_js__WEBPACK_IMPORTED_MODULE_2__.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = (0,_resolve_end_js__WEBPACK_IMPORTED_MODULE_5__.resolveEnd)(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new _errors_js__WEBPACK_IMPORTED_MODULE_2__.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new _doc_Document_js__WEBPACK_IMPORTED_MODULE_1__.Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/composer.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/resolve-block-map.js":
/*!*********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/resolve-block-map.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveBlockMap: () => (/* binding */ resolveBlockMap)\n/* harmony export */ });\n/* harmony import */ var _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Pair.js */ \"./node_modules/yaml/browser/dist/nodes/Pair.js\");\n/* harmony import */ var _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/YAMLMap.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLMap.js\");\n/* harmony import */ var _resolve_props_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolve-props.js */ \"./node_modules/yaml/browser/dist/compose/resolve-props.js\");\n/* harmony import */ var _util_contains_newline_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util-contains-newline.js */ \"./node_modules/yaml/browser/dist/compose/util-contains-newline.js\");\n/* harmony import */ var _util_flow_indent_check_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util-flow-indent-check.js */ \"./node_modules/yaml/browser/dist/compose/util-flow-indent-check.js\");\n/* harmony import */ var _util_map_includes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util-map-includes.js */ \"./node_modules/yaml/browser/dist/compose/util-map-includes.js\");\n\n\n\n\n\n\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_1__.YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = (0,_resolve_props_js__WEBPACK_IMPORTED_MODULE_2__.resolveProps)(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || (0,_util_contains_newline_js__WEBPACK_IMPORTED_MODULE_3__.containsNewline)(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            (0,_util_flow_indent_check_js__WEBPACK_IMPORTED_MODULE_4__.flowIndentCheck)(bm.indent, key, onError);\n        if ((0,_util_map_includes_js__WEBPACK_IMPORTED_MODULE_5__.mapIncludes)(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = (0,_resolve_props_js__WEBPACK_IMPORTED_MODULE_2__.resolveProps)(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                (0,_util_flow_indent_check_js__WEBPACK_IMPORTED_MODULE_4__.flowIndentCheck)(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_0__.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_0__.Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/resolve-block-map.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/resolve-block-scalar.js":
/*!************************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/resolve-block-scalar.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveBlockScalar: () => (/* binding */ resolveBlockScalar)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_FOLDED : _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/resolve-block-scalar.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/resolve-block-seq.js":
/*!*********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/resolve-block-seq.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveBlockSeq: () => (/* binding */ resolveBlockSeq)\n/* harmony export */ });\n/* harmony import */ var _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/YAMLSeq.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLSeq.js\");\n/* harmony import */ var _resolve_props_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resolve-props.js */ \"./node_modules/yaml/browser/dist/compose/resolve-props.js\");\n/* harmony import */ var _util_flow_indent_check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util-flow-indent-check.js */ \"./node_modules/yaml/browser/dist/compose/util-flow-indent-check.js\");\n\n\n\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_0__.YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = (0,_resolve_props_js__WEBPACK_IMPORTED_MODULE_1__.resolveProps)(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            (0,_util_flow_indent_check_js__WEBPACK_IMPORTED_MODULE_2__.flowIndentCheck)(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/resolve-block-seq.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/resolve-end.js":
/*!***************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/resolve-end.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveEnd: () => (/* binding */ resolveEnd)\n/* harmony export */ });\nfunction resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/resolve-end.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/resolve-flow-collection.js":
/*!***************************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/resolve-flow-collection.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveFlowCollection: () => (/* binding */ resolveFlowCollection)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/Pair.js */ \"./node_modules/yaml/browser/dist/nodes/Pair.js\");\n/* harmony import */ var _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nodes/YAMLMap.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLMap.js\");\n/* harmony import */ var _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../nodes/YAMLSeq.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLSeq.js\");\n/* harmony import */ var _resolve_end_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resolve-end.js */ \"./node_modules/yaml/browser/dist/compose/resolve-end.js\");\n/* harmony import */ var _resolve_props_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resolve-props.js */ \"./node_modules/yaml/browser/dist/compose/resolve-props.js\");\n/* harmony import */ var _util_contains_newline_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util-contains-newline.js */ \"./node_modules/yaml/browser/dist/compose/util-contains-newline.js\");\n/* harmony import */ var _util_map_includes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util-map-includes.js */ \"./node_modules/yaml/browser/dist/compose/util-map-includes.js\");\n\n\n\n\n\n\n\n\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap : _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__.YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = (0,_resolve_props_js__WEBPACK_IMPORTED_MODULE_5__.resolveProps)(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && (0,_util_contains_newline_js__WEBPACK_IMPORTED_MODULE_6__.containsNewline)(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = (0,_resolve_props_js__WEBPACK_IMPORTED_MODULE_5__.resolveProps)(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if ((0,_util_map_includes_js__WEBPACK_IMPORTED_MODULE_7__.mapIncludes)(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = (0,_resolve_end_js__WEBPACK_IMPORTED_MODULE_4__.resolveEnd)(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/resolve-flow-collection.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js":
/*!***********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveFlowScalar: () => (/* binding */ resolveFlowScalar)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _resolve_end_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resolve-end.js */ \"./node_modules/yaml/browser/dist/compose/resolve-end.js\");\n\n\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = (0,_resolve_end_js__WEBPACK_IMPORTED_MODULE_1__.resolveEnd)(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/resolve-props.js":
/*!*****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/resolve-props.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveProps: () => (/* binding */ resolveProps)\n/* harmony export */ });\nfunction resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/resolve-props.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/util-contains-newline.js":
/*!*************************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/util-contains-newline.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   containsNewline: () => (/* binding */ containsNewline)\n/* harmony export */ });\nfunction containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/util-contains-newline.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js":
/*!******************************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emptyScalarPosition: () => (/* binding */ emptyScalarPosition)\n/* harmony export */ });\nfunction emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/util-flow-indent-check.js":
/*!**************************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/util-flow-indent-check.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flowIndentCheck: () => (/* binding */ flowIndentCheck)\n/* harmony export */ });\n/* harmony import */ var _util_contains_newline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util-contains-newline.js */ \"./node_modules/yaml/browser/dist/compose/util-contains-newline.js\");\n\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            (0,_util_contains_newline_js__WEBPACK_IMPORTED_MODULE_0__.containsNewline)(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/util-flow-indent-check.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/compose/util-map-includes.js":
/*!*********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/compose/util-map-includes.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapIncludes: () => (/* binding */ mapIncludes)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(a) &&\n                (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/compose/util-map-includes.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/doc/Document.js":
/*!********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/doc/Document.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Document: () => (/* binding */ Document)\n/* harmony export */ });\n/* harmony import */ var _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Alias.js */ \"./node_modules/yaml/browser/dist/nodes/Alias.js\");\n/* harmony import */ var _nodes_Collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/Collection.js */ \"./node_modules/yaml/browser/dist/nodes/Collection.js\");\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../nodes/Pair.js */ \"./node_modules/yaml/browser/dist/nodes/Pair.js\");\n/* harmony import */ var _nodes_toJS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../nodes/toJS.js */ \"./node_modules/yaml/browser/dist/nodes/toJS.js\");\n/* harmony import */ var _schema_Schema_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../schema/Schema.js */ \"./node_modules/yaml/browser/dist/schema/Schema.js\");\n/* harmony import */ var _stringify_stringifyDocument_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../stringify/stringifyDocument.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyDocument.js\");\n/* harmony import */ var _anchors_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./anchors.js */ \"./node_modules/yaml/browser/dist/doc/anchors.js\");\n/* harmony import */ var _applyReviver_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./applyReviver.js */ \"./node_modules/yaml/browser/dist/doc/applyReviver.js\");\n/* harmony import */ var _createNode_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createNode.js */ \"./node_modules/yaml/browser/dist/doc/createNode.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./directives.js */ \"./node_modules/yaml/browser/dist/doc/directives.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, _nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.NODE_TYPE, { value: _nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new _directives_js__WEBPACK_IMPORTED_MODULE_10__.Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.NODE_TYPE]: { value: _nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isNode)(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = (0,_anchors_js__WEBPACK_IMPORTED_MODULE_7__.anchorNames)(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? (0,_anchors_js__WEBPACK_IMPORTED_MODULE_7__.findNewAnchor)(name || 'a', prev) : name;\n        }\n        return new _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_0__.Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = (0,_anchors_js__WEBPACK_IMPORTED_MODULE_7__.createNodeAnchors)(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = (0,_createNode_js__WEBPACK_IMPORTED_MODULE_9__.createNode)(value, tag, ctx);\n        if (flow && (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isCollection)(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_3__.Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if ((0,_nodes_Collection_js__WEBPACK_IMPORTED_MODULE_1__.isEmptyPath)(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isCollection)(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if ((0,_nodes_Collection_js__WEBPACK_IMPORTED_MODULE_1__.isEmptyPath)(path))\n            return !keepScalar && (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isScalar)(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isCollection)(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isCollection)(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if ((0,_nodes_Collection_js__WEBPACK_IMPORTED_MODULE_1__.isEmptyPath)(path))\n            return this.contents !== undefined;\n        return (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isCollection)(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = (0,_nodes_Collection_js__WEBPACK_IMPORTED_MODULE_1__.collectionFromPath)(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if ((0,_nodes_Collection_js__WEBPACK_IMPORTED_MODULE_1__.isEmptyPath)(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = (0,_nodes_Collection_js__WEBPACK_IMPORTED_MODULE_1__.collectionFromPath)(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new _directives_js__WEBPACK_IMPORTED_MODULE_10__.Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new _directives_js__WEBPACK_IMPORTED_MODULE_10__.Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new _schema_Schema_js__WEBPACK_IMPORTED_MODULE_5__.Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = (0,_nodes_toJS_js__WEBPACK_IMPORTED_MODULE_4__.toJS)(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? (0,_applyReviver_js__WEBPACK_IMPORTED_MODULE_8__.applyReviver)(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return (0,_stringify_stringifyDocument_js__WEBPACK_IMPORTED_MODULE_6__.stringifyDocument)(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_2__.isCollection)(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/doc/Document.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/doc/anchors.js":
/*!*******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/doc/anchors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anchorIsValid: () => (/* binding */ anchorIsValid),\n/* harmony export */   anchorNames: () => (/* binding */ anchorNames),\n/* harmony export */   createNodeAnchors: () => (/* binding */ createNodeAnchors),\n/* harmony export */   findNewAnchor: () => (/* binding */ findNewAnchor)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _visit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../visit.js */ \"./node_modules/yaml/browser/dist/visit.js\");\n\n\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    (0,_visit_js__WEBPACK_IMPORTED_MODULE_1__.visit)(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(ref.node) || (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/doc/anchors.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/doc/applyReviver.js":
/*!************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/doc/applyReviver.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyReviver: () => (/* binding */ applyReviver)\n/* harmony export */ });\n/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/doc/applyReviver.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/doc/createNode.js":
/*!**********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/doc/createNode.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNode: () => (/* binding */ createNode)\n/* harmony export */ });\n/* harmony import */ var _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Alias.js */ \"./node_modules/yaml/browser/dist/nodes/Alias.js\");\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n\n\n\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isDocument)(value))\n        value = value.contents;\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(value))\n        return value;\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isPair)(value)) {\n        const map = ctx.schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_0__.Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_2__.Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.SEQ]\n                    : schema[_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_2__.Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/doc/createNode.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/doc/directives.js":
/*!**********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/doc/directives.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Directives: () => (/* binding */ Directives)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _visit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../visit.js */ \"./node_modules/yaml/browser/dist/visit.js\");\n\n\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(doc.contents)) {\n            const tags = {};\n            (0,_visit_js__WEBPACK_IMPORTED_MODULE_1__.visit)(doc.contents, (_key, node) => {\n                if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/doc/directives.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/errors.js":
/*!**************************************************!*\
  !*** ./node_modules/yaml/browser/dist/errors.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAMLError: () => (/* binding */ YAMLError),\n/* harmony export */   YAMLParseError: () => (/* binding */ YAMLParseError),\n/* harmony export */   YAMLWarning: () => (/* binding */ YAMLWarning),\n/* harmony export */   prettifyError: () => (/* binding */ prettifyError)\n/* harmony export */ });\nclass YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/errors.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/yaml/browser/dist/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alias: () => (/* reexport safe */ _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_4__.Alias),\n/* harmony export */   CST: () => (/* reexport module object */ _parse_cst_js__WEBPACK_IMPORTED_MODULE_10__),\n/* harmony export */   Composer: () => (/* reexport safe */ _compose_composer_js__WEBPACK_IMPORTED_MODULE_0__.Composer),\n/* harmony export */   Document: () => (/* reexport safe */ _doc_Document_js__WEBPACK_IMPORTED_MODULE_1__.Document),\n/* harmony export */   Lexer: () => (/* reexport safe */ _parse_lexer_js__WEBPACK_IMPORTED_MODULE_11__.Lexer),\n/* harmony export */   LineCounter: () => (/* reexport safe */ _parse_line_counter_js__WEBPACK_IMPORTED_MODULE_12__.LineCounter),\n/* harmony export */   Pair: () => (/* reexport safe */ _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_6__.Pair),\n/* harmony export */   Parser: () => (/* reexport safe */ _parse_parser_js__WEBPACK_IMPORTED_MODULE_13__.Parser),\n/* harmony export */   Scalar: () => (/* reexport safe */ _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_7__.Scalar),\n/* harmony export */   Schema: () => (/* reexport safe */ _schema_Schema_js__WEBPACK_IMPORTED_MODULE_2__.Schema),\n/* harmony export */   YAMLError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.YAMLError),\n/* harmony export */   YAMLMap: () => (/* reexport safe */ _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_8__.YAMLMap),\n/* harmony export */   YAMLParseError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.YAMLParseError),\n/* harmony export */   YAMLSeq: () => (/* reexport safe */ _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_9__.YAMLSeq),\n/* harmony export */   YAMLWarning: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.YAMLWarning),\n/* harmony export */   isAlias: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isAlias),\n/* harmony export */   isCollection: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isCollection),\n/* harmony export */   isDocument: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isDocument),\n/* harmony export */   isMap: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isMap),\n/* harmony export */   isNode: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isNode),\n/* harmony export */   isPair: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isPair),\n/* harmony export */   isScalar: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isScalar),\n/* harmony export */   isSeq: () => (/* reexport safe */ _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__.isSeq),\n/* harmony export */   parse: () => (/* reexport safe */ _public_api_js__WEBPACK_IMPORTED_MODULE_14__.parse),\n/* harmony export */   parseAllDocuments: () => (/* reexport safe */ _public_api_js__WEBPACK_IMPORTED_MODULE_14__.parseAllDocuments),\n/* harmony export */   parseDocument: () => (/* reexport safe */ _public_api_js__WEBPACK_IMPORTED_MODULE_14__.parseDocument),\n/* harmony export */   stringify: () => (/* reexport safe */ _public_api_js__WEBPACK_IMPORTED_MODULE_14__.stringify),\n/* harmony export */   visit: () => (/* reexport safe */ _visit_js__WEBPACK_IMPORTED_MODULE_15__.visit),\n/* harmony export */   visitAsync: () => (/* reexport safe */ _visit_js__WEBPACK_IMPORTED_MODULE_15__.visitAsync)\n/* harmony export */ });\n/* harmony import */ var _compose_composer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compose/composer.js */ \"./node_modules/yaml/browser/dist/compose/composer.js\");\n/* harmony import */ var _doc_Document_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./doc/Document.js */ \"./node_modules/yaml/browser/dist/doc/Document.js\");\n/* harmony import */ var _schema_Schema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema/Schema.js */ \"./node_modules/yaml/browser/dist/schema/Schema.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/yaml/browser/dist/errors.js\");\n/* harmony import */ var _nodes_Alias_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes/Alias.js */ \"./node_modules/yaml/browser/dist/nodes/Alias.js\");\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nodes/Pair.js */ \"./node_modules/yaml/browser/dist/nodes/Pair.js\");\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./nodes/YAMLMap.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLMap.js\");\n/* harmony import */ var _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./nodes/YAMLSeq.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLSeq.js\");\n/* harmony import */ var _parse_cst_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parse/cst.js */ \"./node_modules/yaml/browser/dist/parse/cst.js\");\n/* harmony import */ var _parse_lexer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./parse/lexer.js */ \"./node_modules/yaml/browser/dist/parse/lexer.js\");\n/* harmony import */ var _parse_line_counter_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parse/line-counter.js */ \"./node_modules/yaml/browser/dist/parse/line-counter.js\");\n/* harmony import */ var _parse_parser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parse/parser.js */ \"./node_modules/yaml/browser/dist/parse/parser.js\");\n/* harmony import */ var _public_api_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./public-api.js */ \"./node_modules/yaml/browser/dist/public-api.js\");\n/* harmony import */ var _visit_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./visit.js */ \"./node_modules/yaml/browser/dist/visit.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/index.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/log.js":
/*!***********************************************!*\
  !*** ./node_modules/yaml/browser/dist/log.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\nfunction debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        // https://github.com/typescript-eslint/typescript-eslint/issues/7478\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/log.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/Alias.js":
/*!*******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/Alias.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alias: () => (/* binding */ Alias)\n/* harmony export */ });\n/* harmony import */ var _doc_anchors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/anchors.js */ \"./node_modules/yaml/browser/dist/doc/anchors.js\");\n/* harmony import */ var _visit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../visit.js */ \"./node_modules/yaml/browser/dist/visit.js\");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _Node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Node.js */ \"./node_modules/yaml/browser/dist/nodes/Node.js\");\n/* harmony import */ var _toJS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toJS.js */ \"./node_modules/yaml/browser/dist/nodes/toJS.js\");\n\n\n\n\n\n\nclass Alias extends _Node_js__WEBPACK_IMPORTED_MODULE_3__.NodeBase {\n    constructor(source) {\n        super(_identity_js__WEBPACK_IMPORTED_MODULE_2__.ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        (0,_visit_js__WEBPACK_IMPORTED_MODULE_1__.visit)(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return _visit_js__WEBPACK_IMPORTED_MODULE_1__.visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            (0,_toJS_js__WEBPACK_IMPORTED_MODULE_4__.toJS)(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            (0,_doc_anchors_js__WEBPACK_IMPORTED_MODULE_0__.anchorIsValid)(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isAlias)(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isCollection)(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isPair)(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/Alias.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/Collection.js":
/*!************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/Collection.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Collection: () => (/* binding */ Collection),\n/* harmony export */   collectionFromPath: () => (/* binding */ collectionFromPath),\n/* harmony export */   isEmptyPath: () => (/* binding */ isEmptyPath)\n/* harmony export */ });\n/* harmony import */ var _doc_createNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/createNode.js */ \"./node_modules/yaml/browser/dist/doc/createNode.js\");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _Node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Node.js */ \"./node_modules/yaml/browser/dist/nodes/Node.js\");\n\n\n\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return (0,_doc_createNode_js__WEBPACK_IMPORTED_MODULE_0__.createNode)(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends _Node_js__WEBPACK_IMPORTED_MODULE_2__.NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => (0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(it) || (0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isPair)(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && (0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isScalar)(node) ? node.value : node;\n        else\n            return (0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!(0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isPair)(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    (0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isScalar)(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return (0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/Collection.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/Node.js":
/*!******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/Node.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeBase: () => (/* binding */ NodeBase)\n/* harmony export */ });\n/* harmony import */ var _doc_applyReviver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/applyReviver.js */ \"./node_modules/yaml/browser/dist/doc/applyReviver.js\");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _toJS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toJS.js */ \"./node_modules/yaml/browser/dist/nodes/toJS.js\");\n\n\n\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, _identity_js__WEBPACK_IMPORTED_MODULE_1__.NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!(0,_identity_js__WEBPACK_IMPORTED_MODULE_1__.isDocument)(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = (0,_toJS_js__WEBPACK_IMPORTED_MODULE_2__.toJS)(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? (0,_doc_applyReviver_js__WEBPACK_IMPORTED_MODULE_0__.applyReviver)(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/Node.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/Pair.js":
/*!******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/Pair.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pair: () => (/* binding */ Pair),\n/* harmony export */   createPair: () => (/* binding */ createPair)\n/* harmony export */ });\n/* harmony import */ var _doc_createNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/createNode.js */ \"./node_modules/yaml/browser/dist/doc/createNode.js\");\n/* harmony import */ var _stringify_stringifyPair_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stringify/stringifyPair.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyPair.js\");\n/* harmony import */ var _addPairToJSMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./addPairToJSMap.js */ \"./node_modules/yaml/browser/dist/nodes/addPairToJSMap.js\");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n\n\n\n\n\nfunction createPair(key, value, ctx) {\n    const k = (0,_doc_createNode_js__WEBPACK_IMPORTED_MODULE_0__.createNode)(key, undefined, ctx);\n    const v = (0,_doc_createNode_js__WEBPACK_IMPORTED_MODULE_0__.createNode)(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, _identity_js__WEBPACK_IMPORTED_MODULE_3__.NODE_TYPE, { value: _identity_js__WEBPACK_IMPORTED_MODULE_3__.PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isNode)(key))\n            key = key.clone(schema);\n        if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isNode)(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return (0,_addPairToJSMap_js__WEBPACK_IMPORTED_MODULE_2__.addPairToJSMap)(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? (0,_stringify_stringifyPair_js__WEBPACK_IMPORTED_MODULE_1__.stringifyPair)(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/Pair.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/Scalar.js":
/*!********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/Scalar.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scalar: () => (/* binding */ Scalar),\n/* harmony export */   isScalarValue: () => (/* binding */ isScalarValue)\n/* harmony export */ });\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _Node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Node.js */ \"./node_modules/yaml/browser/dist/nodes/Node.js\");\n/* harmony import */ var _toJS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toJS.js */ \"./node_modules/yaml/browser/dist/nodes/toJS.js\");\n\n\n\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends _Node_js__WEBPACK_IMPORTED_MODULE_1__.NodeBase {\n    constructor(value) {\n        super(_identity_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : (0,_toJS_js__WEBPACK_IMPORTED_MODULE_2__.toJS)(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/Scalar.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/YAMLMap.js":
/*!*********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/YAMLMap.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAMLMap: () => (/* binding */ YAMLMap),\n/* harmony export */   findPair: () => (/* binding */ findPair)\n/* harmony export */ });\n/* harmony import */ var _stringify_stringifyCollection_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stringify/stringifyCollection.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyCollection.js\");\n/* harmony import */ var _addPairToJSMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./addPairToJSMap.js */ \"./node_modules/yaml/browser/dist/nodes/addPairToJSMap.js\");\n/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Collection.js */ \"./node_modules/yaml/browser/dist/nodes/Collection.js\");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _Pair_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Pair.js */ \"./node_modules/yaml/browser/dist/nodes/Pair.js\");\n/* harmony import */ var _Scalar_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n\n\n\n\n\n\n\nfunction findPair(items, key) {\n    const k = (0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isScalar)(key) ? key.value : key;\n    for (const it of items) {\n        if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isPair)(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isScalar)(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends _Collection_js__WEBPACK_IMPORTED_MODULE_2__.Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(_identity_js__WEBPACK_IMPORTED_MODULE_3__.MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push((0,_Pair_js__WEBPACK_IMPORTED_MODULE_4__.createPair)(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isPair)(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new _Pair_js__WEBPACK_IMPORTED_MODULE_4__.Pair(pair, pair?.value);\n        }\n        else\n            _pair = new _Pair_js__WEBPACK_IMPORTED_MODULE_4__.Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isScalar)(prev.value) && (0,_Scalar_js__WEBPACK_IMPORTED_MODULE_5__.isScalarValue)(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && (0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isScalar)(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new _Pair_js__WEBPACK_IMPORTED_MODULE_4__.Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            (0,_addPairToJSMap_js__WEBPACK_IMPORTED_MODULE_1__.addPairToJSMap)(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!(0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isPair)(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return (0,_stringify_stringifyCollection_js__WEBPACK_IMPORTED_MODULE_0__.stringifyCollection)(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/YAMLMap.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/YAMLSeq.js":
/*!*********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/YAMLSeq.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAMLSeq: () => (/* binding */ YAMLSeq)\n/* harmony export */ });\n/* harmony import */ var _doc_createNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/createNode.js */ \"./node_modules/yaml/browser/dist/doc/createNode.js\");\n/* harmony import */ var _stringify_stringifyCollection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stringify/stringifyCollection.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyCollection.js\");\n/* harmony import */ var _Collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Collection.js */ \"./node_modules/yaml/browser/dist/nodes/Collection.js\");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _Scalar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _toJS_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./toJS.js */ \"./node_modules/yaml/browser/dist/nodes/toJS.js\");\n\n\n\n\n\n\n\nclass YAMLSeq extends _Collection_js__WEBPACK_IMPORTED_MODULE_2__.Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(_identity_js__WEBPACK_IMPORTED_MODULE_3__.SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && (0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isScalar)(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isScalar)(prev) && (0,_Scalar_js__WEBPACK_IMPORTED_MODULE_4__.isScalarValue)(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push((0,_toJS_js__WEBPACK_IMPORTED_MODULE_5__.toJS)(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return (0,_stringify_stringifyCollection_js__WEBPACK_IMPORTED_MODULE_1__.stringifyCollection)(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push((0,_doc_createNode_js__WEBPACK_IMPORTED_MODULE_0__.createNode)(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = (0,_identity_js__WEBPACK_IMPORTED_MODULE_3__.isScalar)(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/YAMLSeq.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/addPairToJSMap.js":
/*!****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/addPairToJSMap.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPairToJSMap: () => (/* binding */ addPairToJSMap)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log.js */ \"./node_modules/yaml/browser/dist/log.js\");\n/* harmony import */ var _stringify_stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stringify/stringify.js */ \"./node_modules/yaml/browser/dist/stringify/stringify.js\");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _Scalar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _toJS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toJS.js */ \"./node_modules/yaml/browser/dist/nodes/toJS.js\");\n\n\n\n\n\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = (0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isAlias)(value) ? value.resolve(ctx.doc) : value;\n        if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isSeq)(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = (0,_toJS_js__WEBPACK_IMPORTED_MODULE_4__.toJS)(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, (0,_toJS_js__WEBPACK_IMPORTED_MODULE_4__.toJS)(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = (0,_toJS_js__WEBPACK_IMPORTED_MODULE_4__.toJS)(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    ((0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isScalar)(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === _Scalar_js__WEBPACK_IMPORTED_MODULE_3__.Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && (0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isAlias)(value) ? value.resolve(ctx.doc) : value;\n    if (!(0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isMap)(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if ((0,_identity_js__WEBPACK_IMPORTED_MODULE_2__.isNode)(key) && ctx?.doc) {\n        const strCtx = (0,_stringify_stringify_js__WEBPACK_IMPORTED_MODULE_1__.createStringifyContext)(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            (0,_log_js__WEBPACK_IMPORTED_MODULE_0__.warn)(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/addPairToJSMap.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/identity.js":
/*!**********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/identity.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALIAS: () => (/* binding */ ALIAS),\n/* harmony export */   DOC: () => (/* binding */ DOC),\n/* harmony export */   MAP: () => (/* binding */ MAP),\n/* harmony export */   NODE_TYPE: () => (/* binding */ NODE_TYPE),\n/* harmony export */   PAIR: () => (/* binding */ PAIR),\n/* harmony export */   SCALAR: () => (/* binding */ SCALAR),\n/* harmony export */   SEQ: () => (/* binding */ SEQ),\n/* harmony export */   hasAnchor: () => (/* binding */ hasAnchor),\n/* harmony export */   isAlias: () => (/* binding */ isAlias),\n/* harmony export */   isCollection: () => (/* binding */ isCollection),\n/* harmony export */   isDocument: () => (/* binding */ isDocument),\n/* harmony export */   isMap: () => (/* binding */ isMap),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isPair: () => (/* binding */ isPair),\n/* harmony export */   isScalar: () => (/* binding */ isScalar),\n/* harmony export */   isSeq: () => (/* binding */ isSeq)\n/* harmony export */ });\nconst ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/identity.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/nodes/toJS.js":
/*!******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/nodes/toJS.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toJS: () => (/* binding */ toJS)\n/* harmony export */ });\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !(0,_identity_js__WEBPACK_IMPORTED_MODULE_0__.hasAnchor)(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/nodes/toJS.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/parse/cst-scalar.js":
/*!************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/parse/cst-scalar.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createScalarToken: () => (/* binding */ createScalarToken),\n/* harmony export */   resolveAsScalar: () => (/* binding */ resolveAsScalar),\n/* harmony export */   setScalarValue: () => (/* binding */ setScalarValue)\n/* harmony export */ });\n/* harmony import */ var _compose_resolve_block_scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../compose/resolve-block-scalar.js */ \"./node_modules/yaml/browser/dist/compose/resolve-block-scalar.js\");\n/* harmony import */ var _compose_resolve_flow_scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../compose/resolve-flow-scalar.js */ \"./node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors.js */ \"./node_modules/yaml/browser/dist/errors.js\");\n/* harmony import */ var _stringify_stringifyString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stringify/stringifyString.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyString.js\");\n\n\n\n\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return (0,_compose_resolve_flow_scalar_js__WEBPACK_IMPORTED_MODULE_1__.resolveFlowScalar)(token, strict, _onError);\n            case 'block-scalar':\n                return (0,_compose_resolve_block_scalar_js__WEBPACK_IMPORTED_MODULE_0__.resolveBlockScalar)(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = (0,_stringify_stringifyString_js__WEBPACK_IMPORTED_MODULE_3__.stringifyString)({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = (0,_stringify_stringifyString_js__WEBPACK_IMPORTED_MODULE_3__.stringifyString)({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/parse/cst-scalar.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/parse/cst-stringify.js":
/*!***************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/parse/cst-stringify.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/parse/cst-stringify.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/parse/cst-visit.js":
/*!***********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/parse/cst-visit.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   visit: () => (/* binding */ visit)\n/* harmony export */ });\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/parse/cst-visit.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/parse/cst.js":
/*!*****************************************************!*\
  !*** ./node_modules/yaml/browser/dist/parse/cst.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BOM: () => (/* binding */ BOM),\n/* harmony export */   DOCUMENT: () => (/* binding */ DOCUMENT),\n/* harmony export */   FLOW_END: () => (/* binding */ FLOW_END),\n/* harmony export */   SCALAR: () => (/* binding */ SCALAR),\n/* harmony export */   createScalarToken: () => (/* reexport safe */ _cst_scalar_js__WEBPACK_IMPORTED_MODULE_0__.createScalarToken),\n/* harmony export */   isCollection: () => (/* binding */ isCollection),\n/* harmony export */   isScalar: () => (/* binding */ isScalar),\n/* harmony export */   prettyToken: () => (/* binding */ prettyToken),\n/* harmony export */   resolveAsScalar: () => (/* reexport safe */ _cst_scalar_js__WEBPACK_IMPORTED_MODULE_0__.resolveAsScalar),\n/* harmony export */   setScalarValue: () => (/* reexport safe */ _cst_scalar_js__WEBPACK_IMPORTED_MODULE_0__.setScalarValue),\n/* harmony export */   stringify: () => (/* reexport safe */ _cst_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify),\n/* harmony export */   tokenType: () => (/* binding */ tokenType),\n/* harmony export */   visit: () => (/* reexport safe */ _cst_visit_js__WEBPACK_IMPORTED_MODULE_2__.visit)\n/* harmony export */ });\n/* harmony import */ var _cst_scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cst-scalar.js */ \"./node_modules/yaml/browser/dist/parse/cst-scalar.js\");\n/* harmony import */ var _cst_stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cst-stringify.js */ \"./node_modules/yaml/browser/dist/parse/cst-stringify.js\");\n/* harmony import */ var _cst_visit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cst-visit.js */ \"./node_modules/yaml/browser/dist/parse/cst-visit.js\");\n\n\n\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/parse/cst.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/parse/lexer.js":
/*!*******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/parse/lexer.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Lexer: () => (/* binding */ Lexer)\n/* harmony export */ });\n/* harmony import */ var _cst_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cst.js */ \"./node_modules/yaml/browser/dist/parse/cst.js\");\n\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === _cst_js__WEBPACK_IMPORTED_MODULE_0__.BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield _cst_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield _cst_js__WEBPACK_IMPORTED_MODULE_0__.FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield _cst_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield _cst_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/parse/lexer.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/parse/line-counter.js":
/*!**************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/parse/line-counter.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineCounter: () => (/* binding */ LineCounter)\n/* harmony export */ });\n/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/parse/line-counter.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/parse/parser.js":
/*!********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/parse/parser.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* binding */ Parser)\n/* harmony export */ });\n/* harmony import */ var _cst_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cst.js */ \"./node_modules/yaml/browser/dist/parse/cst.js\");\n/* harmony import */ var _lexer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lexer.js */ \"./node_modules/yaml/browser/dist/parse/lexer.js\");\n\n\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new _lexer_js__WEBPACK_IMPORTED_MODULE_1__.Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = (0,_cst_js__WEBPACK_IMPORTED_MODULE_0__.tokenType)(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/parse/parser.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/public-api.js":
/*!******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/public-api.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseAllDocuments: () => (/* binding */ parseAllDocuments),\n/* harmony export */   parseDocument: () => (/* binding */ parseDocument),\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _compose_composer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compose/composer.js */ \"./node_modules/yaml/browser/dist/compose/composer.js\");\n/* harmony import */ var _doc_Document_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./doc/Document.js */ \"./node_modules/yaml/browser/dist/doc/Document.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/yaml/browser/dist/errors.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log.js */ \"./node_modules/yaml/browser/dist/log.js\");\n/* harmony import */ var _parse_line_counter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parse/line-counter.js */ \"./node_modules/yaml/browser/dist/parse/line-counter.js\");\n/* harmony import */ var _parse_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parse/parser.js */ \"./node_modules/yaml/browser/dist/parse/parser.js\");\n\n\n\n\n\n\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new _parse_line_counter_js__WEBPACK_IMPORTED_MODULE_4__.LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new _parse_parser_js__WEBPACK_IMPORTED_MODULE_5__.Parser(lineCounter?.addNewLine);\n    const composer = new _compose_composer_js__WEBPACK_IMPORTED_MODULE_0__.Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach((0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.prettifyError)(source, lineCounter));\n            doc.warnings.forEach((0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.prettifyError)(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new _parse_parser_js__WEBPACK_IMPORTED_MODULE_5__.Parser(lineCounter?.addNewLine);\n    const composer = new _compose_composer_js__WEBPACK_IMPORTED_MODULE_0__.Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new _errors_js__WEBPACK_IMPORTED_MODULE_2__.YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach((0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.prettifyError)(source, lineCounter));\n        doc.warnings.forEach((0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.prettifyError)(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => (0,_log_js__WEBPACK_IMPORTED_MODULE_3__.warn)(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new _doc_Document_js__WEBPACK_IMPORTED_MODULE_1__.Document(value, _replacer, options).toString(options);\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/public-api.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/Schema.js":
/*!*********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/Schema.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Schema: () => (/* binding */ Schema)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _common_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/map.js */ \"./node_modules/yaml/browser/dist/schema/common/map.js\");\n/* harmony import */ var _common_seq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/seq.js */ \"./node_modules/yaml/browser/dist/schema/common/seq.js\");\n/* harmony import */ var _common_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/string.js */ \"./node_modules/yaml/browser/dist/schema/common/string.js\");\n/* harmony import */ var _tags_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tags.js */ \"./node_modules/yaml/browser/dist/schema/tags.js\");\n\n\n\n\n\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? (0,_tags_js__WEBPACK_IMPORTED_MODULE_4__.getTags)(compat, 'compat')\n            : compat\n                ? (0,_tags_js__WEBPACK_IMPORTED_MODULE_4__.getTags)(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? _tags_js__WEBPACK_IMPORTED_MODULE_4__.coreKnownTags : {};\n        this.tags = (0,_tags_js__WEBPACK_IMPORTED_MODULE_4__.getTags)(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.MAP, { value: _common_map_js__WEBPACK_IMPORTED_MODULE_1__.map });\n        Object.defineProperty(this, _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.SCALAR, { value: _common_string_js__WEBPACK_IMPORTED_MODULE_3__.string });\n        Object.defineProperty(this, _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.SEQ, { value: _common_seq_js__WEBPACK_IMPORTED_MODULE_2__.seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/Schema.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/common/map.js":
/*!*************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/common/map.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   map: () => (/* binding */ map)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../nodes/YAMLMap.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLMap.js\");\n\n\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_1__.YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!(0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isMap)(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_1__.YAMLMap.from(schema, obj, ctx)\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/common/map.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/common/null.js":
/*!**************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/common/null.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nullTag: () => (/* binding */ nullTag)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/common/null.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/common/seq.js":
/*!*************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/common/seq.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   seq: () => (/* binding */ seq)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../nodes/YAMLSeq.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLSeq.js\");\n\n\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_1__.YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!(0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isSeq)(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_1__.YAMLSeq.from(schema, obj, ctx)\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/common/seq.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/common/string.js":
/*!****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/common/string.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   string: () => (/* binding */ string)\n/* harmony export */ });\n/* harmony import */ var _stringify_stringifyString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../stringify/stringifyString.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyString.js\");\n\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return (0,_stringify_stringifyString_js__WEBPACK_IMPORTED_MODULE_0__.stringifyString)(item, ctx, onComment, onChompKeep);\n    }\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/common/string.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/core/bool.js":
/*!************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/core/bool.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boolTag: () => (/* binding */ boolTag)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/core/bool.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/core/float.js":
/*!*************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/core/float.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   float: () => (/* binding */ float),\n/* harmony export */   floatExp: () => (/* binding */ floatExp),\n/* harmony export */   floatNaN: () => (/* binding */ floatNaN)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../stringify/stringifyNumber.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyNumber.js\");\n\n\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__.stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : (0,_stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__.stringifyNumber)(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__.stringifyNumber\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/core/float.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/core/int.js":
/*!***********************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/core/int.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   int: () => (/* binding */ int),\n/* harmony export */   intHex: () => (/* binding */ intHex),\n/* harmony export */   intOct: () => (/* binding */ intOct)\n/* harmony export */ });\n/* harmony import */ var _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../stringify/stringifyNumber.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyNumber.js\");\n\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return (0,_stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__.stringifyNumber)(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__.stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/core/int.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/core/schema.js":
/*!**************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/core/schema.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   schema: () => (/* binding */ schema)\n/* harmony export */ });\n/* harmony import */ var _common_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/map.js */ \"./node_modules/yaml/browser/dist/schema/common/map.js\");\n/* harmony import */ var _common_null_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/null.js */ \"./node_modules/yaml/browser/dist/schema/common/null.js\");\n/* harmony import */ var _common_seq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/seq.js */ \"./node_modules/yaml/browser/dist/schema/common/seq.js\");\n/* harmony import */ var _common_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/string.js */ \"./node_modules/yaml/browser/dist/schema/common/string.js\");\n/* harmony import */ var _bool_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bool.js */ \"./node_modules/yaml/browser/dist/schema/core/bool.js\");\n/* harmony import */ var _float_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./float.js */ \"./node_modules/yaml/browser/dist/schema/core/float.js\");\n/* harmony import */ var _int_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./int.js */ \"./node_modules/yaml/browser/dist/schema/core/int.js\");\n\n\n\n\n\n\n\n\nconst schema = [\n    _common_map_js__WEBPACK_IMPORTED_MODULE_0__.map,\n    _common_seq_js__WEBPACK_IMPORTED_MODULE_2__.seq,\n    _common_string_js__WEBPACK_IMPORTED_MODULE_3__.string,\n    _common_null_js__WEBPACK_IMPORTED_MODULE_1__.nullTag,\n    _bool_js__WEBPACK_IMPORTED_MODULE_4__.boolTag,\n    _int_js__WEBPACK_IMPORTED_MODULE_6__.intOct,\n    _int_js__WEBPACK_IMPORTED_MODULE_6__.int,\n    _int_js__WEBPACK_IMPORTED_MODULE_6__.intHex,\n    _float_js__WEBPACK_IMPORTED_MODULE_5__.floatNaN,\n    _float_js__WEBPACK_IMPORTED_MODULE_5__.floatExp,\n    _float_js__WEBPACK_IMPORTED_MODULE_5__.float\n];\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/core/schema.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/json/schema.js":
/*!**************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/json/schema.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   schema: () => (/* binding */ schema)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _common_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/map.js */ \"./node_modules/yaml/browser/dist/schema/common/map.js\");\n/* harmony import */ var _common_seq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/seq.js */ \"./node_modules/yaml/browser/dist/schema/common/seq.js\");\n\n\n\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [_common_map_js__WEBPACK_IMPORTED_MODULE_1__.map, _common_seq_js__WEBPACK_IMPORTED_MODULE_2__.seq].concat(jsonScalars, jsonError);\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/json/schema.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/tags.js":
/*!*******************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/tags.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coreKnownTags: () => (/* binding */ coreKnownTags),\n/* harmony export */   getTags: () => (/* binding */ getTags)\n/* harmony export */ });\n/* harmony import */ var _common_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/map.js */ \"./node_modules/yaml/browser/dist/schema/common/map.js\");\n/* harmony import */ var _common_null_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/null.js */ \"./node_modules/yaml/browser/dist/schema/common/null.js\");\n/* harmony import */ var _common_seq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/seq.js */ \"./node_modules/yaml/browser/dist/schema/common/seq.js\");\n/* harmony import */ var _common_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/string.js */ \"./node_modules/yaml/browser/dist/schema/common/string.js\");\n/* harmony import */ var _core_bool_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/bool.js */ \"./node_modules/yaml/browser/dist/schema/core/bool.js\");\n/* harmony import */ var _core_float_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/float.js */ \"./node_modules/yaml/browser/dist/schema/core/float.js\");\n/* harmony import */ var _core_int_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core/int.js */ \"./node_modules/yaml/browser/dist/schema/core/int.js\");\n/* harmony import */ var _core_schema_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./core/schema.js */ \"./node_modules/yaml/browser/dist/schema/core/schema.js\");\n/* harmony import */ var _json_schema_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./json/schema.js */ \"./node_modules/yaml/browser/dist/schema/json/schema.js\");\n/* harmony import */ var _yaml_1_1_binary_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./yaml-1.1/binary.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js\");\n/* harmony import */ var _yaml_1_1_omap_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./yaml-1.1/omap.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js\");\n/* harmony import */ var _yaml_1_1_pairs_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./yaml-1.1/pairs.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js\");\n/* harmony import */ var _yaml_1_1_schema_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./yaml-1.1/schema.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js\");\n/* harmony import */ var _yaml_1_1_set_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./yaml-1.1/set.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/set.js\");\n/* harmony import */ var _yaml_1_1_timestamp_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./yaml-1.1/timestamp.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst schemas = new Map([\n    ['core', _core_schema_js__WEBPACK_IMPORTED_MODULE_7__.schema],\n    ['failsafe', [_common_map_js__WEBPACK_IMPORTED_MODULE_0__.map, _common_seq_js__WEBPACK_IMPORTED_MODULE_2__.seq, _common_string_js__WEBPACK_IMPORTED_MODULE_3__.string]],\n    ['json', _json_schema_js__WEBPACK_IMPORTED_MODULE_8__.schema],\n    ['yaml11', _yaml_1_1_schema_js__WEBPACK_IMPORTED_MODULE_12__.schema],\n    ['yaml-1.1', _yaml_1_1_schema_js__WEBPACK_IMPORTED_MODULE_12__.schema]\n]);\nconst tagsByName = {\n    binary: _yaml_1_1_binary_js__WEBPACK_IMPORTED_MODULE_9__.binary,\n    bool: _core_bool_js__WEBPACK_IMPORTED_MODULE_4__.boolTag,\n    float: _core_float_js__WEBPACK_IMPORTED_MODULE_5__.float,\n    floatExp: _core_float_js__WEBPACK_IMPORTED_MODULE_5__.floatExp,\n    floatNaN: _core_float_js__WEBPACK_IMPORTED_MODULE_5__.floatNaN,\n    floatTime: _yaml_1_1_timestamp_js__WEBPACK_IMPORTED_MODULE_14__.floatTime,\n    int: _core_int_js__WEBPACK_IMPORTED_MODULE_6__.int,\n    intHex: _core_int_js__WEBPACK_IMPORTED_MODULE_6__.intHex,\n    intOct: _core_int_js__WEBPACK_IMPORTED_MODULE_6__.intOct,\n    intTime: _yaml_1_1_timestamp_js__WEBPACK_IMPORTED_MODULE_14__.intTime,\n    map: _common_map_js__WEBPACK_IMPORTED_MODULE_0__.map,\n    null: _common_null_js__WEBPACK_IMPORTED_MODULE_1__.nullTag,\n    omap: _yaml_1_1_omap_js__WEBPACK_IMPORTED_MODULE_10__.omap,\n    pairs: _yaml_1_1_pairs_js__WEBPACK_IMPORTED_MODULE_11__.pairs,\n    seq: _common_seq_js__WEBPACK_IMPORTED_MODULE_2__.seq,\n    set: _yaml_1_1_set_js__WEBPACK_IMPORTED_MODULE_13__.set,\n    timestamp: _yaml_1_1_timestamp_js__WEBPACK_IMPORTED_MODULE_14__.timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': _yaml_1_1_binary_js__WEBPACK_IMPORTED_MODULE_9__.binary,\n    'tag:yaml.org,2002:omap': _yaml_1_1_omap_js__WEBPACK_IMPORTED_MODULE_10__.omap,\n    'tag:yaml.org,2002:pairs': _yaml_1_1_pairs_js__WEBPACK_IMPORTED_MODULE_11__.pairs,\n    'tag:yaml.org,2002:set': _yaml_1_1_set_js__WEBPACK_IMPORTED_MODULE_13__.set,\n    'tag:yaml.org,2002:timestamp': _yaml_1_1_timestamp_js__WEBPACK_IMPORTED_MODULE_14__.timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/tags.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js":
/*!******************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   binary: () => (/* binding */ binary)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _stringify_stringifyString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../stringify/stringifyString.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyString.js\");\n\n\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_LITERAL;\n        if (type !== _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return (0,_stringify_stringifyString_js__WEBPACK_IMPORTED_MODULE_1__.stringifyString)({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js":
/*!****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   falseTag: () => (/* binding */ falseTag),\n/* harmony export */   trueTag: () => (/* binding */ trueTag)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(false),\n    stringify: boolStringify\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/float.js":
/*!*****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/float.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   float: () => (/* binding */ float),\n/* harmony export */   floatExp: () => (/* binding */ floatExp),\n/* harmony export */   floatNaN: () => (/* binding */ floatNaN)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../stringify/stringifyNumber.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyNumber.js\");\n\n\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__.stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : (0,_stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__.stringifyNumber)(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_1__.stringifyNumber\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/float.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/int.js":
/*!***************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/int.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   int: () => (/* binding */ int),\n/* harmony export */   intBin: () => (/* binding */ intBin),\n/* harmony export */   intHex: () => (/* binding */ intHex),\n/* harmony export */   intOct: () => (/* binding */ intOct)\n/* harmony export */ });\n/* harmony import */ var _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../stringify/stringifyNumber.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyNumber.js\");\n\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return (0,_stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__.stringifyNumber)(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__.stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/int.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js":
/*!****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAMLOMap: () => (/* binding */ YAMLOMap),\n/* harmony export */   omap: () => (/* binding */ omap)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_toJS_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../nodes/toJS.js */ \"./node_modules/yaml/browser/dist/nodes/toJS.js\");\n/* harmony import */ var _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../nodes/YAMLMap.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLMap.js\");\n/* harmony import */ var _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../nodes/YAMLSeq.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLSeq.js\");\n/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pairs.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js\");\n\n\n\n\n\n\nclass YAMLOMap extends _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__.YAMLSeq {\n    constructor() {\n        super();\n        this.add = _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap.prototype.add.bind(this);\n        this.delete = _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap.prototype.delete.bind(this);\n        this.get = _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap.prototype.get.bind(this);\n        this.has = _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap.prototype.has.bind(this);\n        this.set = _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(pair)) {\n                key = (0,_nodes_toJS_js__WEBPACK_IMPORTED_MODULE_1__.toJS)(pair.key, '', ctx);\n                value = (0,_nodes_toJS_js__WEBPACK_IMPORTED_MODULE_1__.toJS)(pair.value, key, ctx);\n            }\n            else {\n                key = (0,_nodes_toJS_js__WEBPACK_IMPORTED_MODULE_1__.toJS)(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = (0,_pairs_js__WEBPACK_IMPORTED_MODULE_4__.createPairs)(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = (0,_pairs_js__WEBPACK_IMPORTED_MODULE_4__.resolvePairs)(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js":
/*!*****************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPairs: () => (/* binding */ createPairs),\n/* harmony export */   pairs: () => (/* binding */ pairs),\n/* harmony export */   resolvePairs: () => (/* binding */ resolvePairs)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../nodes/Pair.js */ \"./node_modules/yaml/browser/dist/nodes/Pair.js\");\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../nodes/YAMLSeq.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLSeq.js\");\n\n\n\n\n\nfunction resolvePairs(seq, onError) {\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isSeq)(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(item))\n                continue;\n            else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isMap)(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.Pair(new _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_2__.Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(item) ? item : new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new _nodes_YAMLSeq_js__WEBPACK_IMPORTED_MODULE_3__.YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push((0,_nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.createPair)(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js":
/*!******************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   schema: () => (/* binding */ schema)\n/* harmony export */ });\n/* harmony import */ var _common_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/map.js */ \"./node_modules/yaml/browser/dist/schema/common/map.js\");\n/* harmony import */ var _common_null_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/null.js */ \"./node_modules/yaml/browser/dist/schema/common/null.js\");\n/* harmony import */ var _common_seq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/seq.js */ \"./node_modules/yaml/browser/dist/schema/common/seq.js\");\n/* harmony import */ var _common_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/string.js */ \"./node_modules/yaml/browser/dist/schema/common/string.js\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./binary.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js\");\n/* harmony import */ var _bool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bool.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js\");\n/* harmony import */ var _float_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./float.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/float.js\");\n/* harmony import */ var _int_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./int.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/int.js\");\n/* harmony import */ var _omap_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./omap.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js\");\n/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pairs.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js\");\n/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./set.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/set.js\");\n/* harmony import */ var _timestamp_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./timestamp.js */ \"./node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst schema = [\n    _common_map_js__WEBPACK_IMPORTED_MODULE_0__.map,\n    _common_seq_js__WEBPACK_IMPORTED_MODULE_2__.seq,\n    _common_string_js__WEBPACK_IMPORTED_MODULE_3__.string,\n    _common_null_js__WEBPACK_IMPORTED_MODULE_1__.nullTag,\n    _bool_js__WEBPACK_IMPORTED_MODULE_5__.trueTag,\n    _bool_js__WEBPACK_IMPORTED_MODULE_5__.falseTag,\n    _int_js__WEBPACK_IMPORTED_MODULE_7__.intBin,\n    _int_js__WEBPACK_IMPORTED_MODULE_7__.intOct,\n    _int_js__WEBPACK_IMPORTED_MODULE_7__.int,\n    _int_js__WEBPACK_IMPORTED_MODULE_7__.intHex,\n    _float_js__WEBPACK_IMPORTED_MODULE_6__.floatNaN,\n    _float_js__WEBPACK_IMPORTED_MODULE_6__.floatExp,\n    _float_js__WEBPACK_IMPORTED_MODULE_6__.float,\n    _binary_js__WEBPACK_IMPORTED_MODULE_4__.binary,\n    _omap_js__WEBPACK_IMPORTED_MODULE_8__.omap,\n    _pairs_js__WEBPACK_IMPORTED_MODULE_9__.pairs,\n    _set_js__WEBPACK_IMPORTED_MODULE_10__.set,\n    _timestamp_js__WEBPACK_IMPORTED_MODULE_11__.intTime,\n    _timestamp_js__WEBPACK_IMPORTED_MODULE_11__.floatTime,\n    _timestamp_js__WEBPACK_IMPORTED_MODULE_11__.timestamp\n];\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/set.js":
/*!***************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/set.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAMLSet: () => (/* binding */ YAMLSet),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../nodes/Pair.js */ \"./node_modules/yaml/browser/dist/nodes/Pair.js\");\n/* harmony import */ var _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../nodes/YAMLMap.js */ \"./node_modules/yaml/browser/dist/nodes/YAMLMap.js\");\n\n\n\n\nclass YAMLSet extends _nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.Pair(key.key, null);\n        else\n            pair = new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.Pair(key, null);\n        const prev = (0,_nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.findPair)(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = (0,_nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.findPair)(this.items, key);\n        return !keepPair && (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(pair)\n            ? (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = (0,_nodes_YAMLMap_js__WEBPACK_IMPORTED_MODULE_2__.findPair)(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new _nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push((0,_nodes_Pair_js__WEBPACK_IMPORTED_MODULE_1__.createPair)(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isMap)(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/set.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js":
/*!*********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   floatTime: () => (/* binding */ floatTime),\n/* harmony export */   intTime: () => (/* binding */ intTime),\n/* harmony export */   timestamp: () => (/* binding */ timestamp)\n/* harmony export */ });\n/* harmony import */ var _stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../stringify/stringifyNumber.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyNumber.js\");\n\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return (0,_stringify_stringifyNumber_js__WEBPACK_IMPORTED_MODULE_0__.stringifyNumber)(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/foldFlowLines.js":
/*!*******************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/foldFlowLines.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FOLD_BLOCK: () => (/* binding */ FOLD_BLOCK),\n/* harmony export */   FOLD_FLOW: () => (/* binding */ FOLD_FLOW),\n/* harmony export */   FOLD_QUOTED: () => (/* binding */ FOLD_QUOTED),\n/* harmony export */   foldFlowLines: () => (/* binding */ foldFlowLines)\n/* harmony export */ });\nconst FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/foldFlowLines.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/stringify.js":
/*!***************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/stringify.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStringifyContext: () => (/* binding */ createStringifyContext),\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _doc_anchors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../doc/anchors.js */ \"./node_modules/yaml/browser/dist/doc/anchors.js\");\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringifyComment.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyComment.js\");\n/* harmony import */ var _stringifyString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stringifyString.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyString.js\");\n\n\n\n\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: _stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__.stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isScalar)(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isScalar)(node) || (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(node)) && node.anchor;\n    if (anchor && (0,_doc_anchors_js__WEBPACK_IMPORTED_MODULE_0__.anchorIsValid)(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isPair)(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isAlias)(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isScalar)(node)\n            ? (0,_stringifyString_js__WEBPACK_IMPORTED_MODULE_3__.stringifyString)(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isScalar)(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/stringify.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/stringifyCollection.js":
/*!*************************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/stringifyCollection.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringifyCollection: () => (/* binding */ stringifyCollection)\n/* harmony export */ });\n/* harmony import */ var _nodes_Collection_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Collection.js */ \"./node_modules/yaml/browser/dist/nodes/Collection.js\");\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/yaml/browser/dist/stringify/stringify.js\");\n/* harmony import */ var _stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stringifyComment.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyComment.js\");\n\n\n\n\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isPair)(item)) {\n            const ik = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.lineComment)(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.indentComment)(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isPair)(item)) {\n            const ik = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_1__.isNode)(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.lineComment)(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > _nodes_Collection_js__WEBPACK_IMPORTED_MODULE_0__.Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n    if (comment) {\n        str += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.lineComment)(str, indent, commentString(comment));\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.indentComment)(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/stringifyCollection.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/stringifyComment.js":
/*!**********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/stringifyComment.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   indentComment: () => (/* binding */ indentComment),\n/* harmony export */   lineComment: () => (/* binding */ lineComment),\n/* harmony export */   stringifyComment: () => (/* binding */ stringifyComment)\n/* harmony export */ });\n/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/stringifyComment.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/stringifyDocument.js":
/*!***********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/stringifyDocument.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringifyDocument: () => (/* binding */ stringifyDocument)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/yaml/browser/dist/stringify/stringify.js\");\n/* harmony import */ var _stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringifyComment.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyComment.js\");\n\n\n\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.createStringifyContext)(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift((0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__.indentComment)(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push((0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__.indentComment)(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__.lineComment)(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push((0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push((0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__.indentComment)(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push((0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_2__.indentComment)(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/stringifyDocument.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/stringifyNumber.js":
/*!*********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/stringifyNumber.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringifyNumber: () => (/* binding */ stringifyNumber)\n/* harmony export */ });\nfunction stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/stringifyNumber.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/stringifyPair.js":
/*!*******************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/stringifyPair.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringifyPair: () => (/* binding */ stringifyPair)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/yaml/browser/dist/stringify/stringify.js\");\n/* harmony import */ var _stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stringifyComment.js */ \"./node_modules/yaml/browser/dist/stringify/stringifyComment.js\");\n\n\n\n\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(key) ||\n            ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(key)\n                ? key.type === _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__.Scalar.BLOCK_FOLDED || key.type === _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_1__.Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.lineComment)(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.lineComment)(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.lineComment)(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isSeq)(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${(0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.indentComment)(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += (0,_stringifyComment_js__WEBPACK_IMPORTED_MODULE_3__.lineComment)(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/stringifyPair.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/stringify/stringifyString.js":
/*!*********************************************************************!*\
  !*** ./node_modules/yaml/browser/dist/stringify/stringifyString.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringifyString: () => (/* binding */ stringifyString)\n/* harmony export */ });\n/* harmony import */ var _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../nodes/Scalar.js */ \"./node_modules/yaml/browser/dist/nodes/Scalar.js\");\n/* harmony import */ var _foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./foldFlowLines.js */ \"./node_modules/yaml/browser/dist/stringify/foldFlowLines.js\");\n\n\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : (0,_foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.foldFlowLines)(str, indent, _foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : (0,_foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.foldFlowLines)(res, indent, _foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_FOLDED\n            ? false\n            : type === _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = (0,_foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.foldFlowLines)(`${start}${value}${end}`, indent, _foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.FOLD_BLOCK, getFoldOptions(ctx, true));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : (0,_foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.foldFlowLines)(str, indent, _foldFlowLines_js__WEBPACK_IMPORTED_MODULE_1__.FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_FOLDED:\n            case _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case _nodes_Scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/stringify/stringifyString.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/dist/visit.js":
/*!*************************************************!*\
  !*** ./node_modules/yaml/browser/dist/visit.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   visit: () => (/* binding */ visit),\n/* harmony export */   visitAsync: () => (/* binding */ visitAsync)\n/* harmony export */ });\n/* harmony import */ var _nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodes/identity.js */ \"./node_modules/yaml/browser/dist/nodes/identity.js\");\n\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isDocument)(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(ctrl) || (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isDocument)(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isNode)(ctrl) || (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isMap)(node))\n        return visitor.Map?.(key, node, path);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isSeq)(node))\n        return visitor.Seq?.(key, node, path);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(node))\n        return visitor.Pair?.(key, node, path);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isScalar)(node))\n        return visitor.Scalar?.(key, node, path);\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isAlias)(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(parent)) {\n        parent.items[key] = node;\n    }\n    else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isPair)(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if ((0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isDocument)(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = (0,_nodes_identity_js__WEBPACK_IMPORTED_MODULE_0__.isAlias)(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/dist/visit.js?");

/***/ }),

/***/ "./node_modules/yaml/browser/index.js":
/*!********************************************!*\
  !*** ./node_modules/yaml/browser/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alias: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Alias),\n/* harmony export */   CST: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.CST),\n/* harmony export */   Composer: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Composer),\n/* harmony export */   Document: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Document),\n/* harmony export */   Lexer: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Lexer),\n/* harmony export */   LineCounter: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.LineCounter),\n/* harmony export */   Pair: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Pair),\n/* harmony export */   Parser: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Parser),\n/* harmony export */   Scalar: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Scalar),\n/* harmony export */   Schema: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Schema),\n/* harmony export */   YAMLError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.YAMLError),\n/* harmony export */   YAMLMap: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.YAMLMap),\n/* harmony export */   YAMLParseError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.YAMLParseError),\n/* harmony export */   YAMLSeq: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.YAMLSeq),\n/* harmony export */   YAMLWarning: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.YAMLWarning),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   isAlias: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isAlias),\n/* harmony export */   isCollection: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isCollection),\n/* harmony export */   isDocument: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isDocument),\n/* harmony export */   isMap: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isMap),\n/* harmony export */   isNode: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isNode),\n/* harmony export */   isPair: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isPair),\n/* harmony export */   isScalar: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isScalar),\n/* harmony export */   isSeq: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isSeq),\n/* harmony export */   parse: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.parse),\n/* harmony export */   parseAllDocuments: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.parseAllDocuments),\n/* harmony export */   parseDocument: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.parseDocument),\n/* harmony export */   stringify: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.stringify),\n/* harmony export */   visit: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.visit),\n/* harmony export */   visitAsync: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.visitAsync)\n/* harmony export */ });\n/* harmony import */ var _dist_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/index.js */ \"./node_modules/yaml/browser/dist/index.js\");\n// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_dist_index_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n//# sourceURL=webpack://crosswords-js/./node_modules/yaml/browser/index.js?");

/***/ }),

/***/ "./src/cell-map.mjs":
/*!**************************!*\
  !*** ./src/cell-map.mjs ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CellMap: () => (/* binding */ CellMap)\n/* harmony export */ });\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/helpers.mjs\");\n\n\n//  Internally used map of Crossword model data to DOM elements.\nclass CellMap {\n  #modelCells = {};\n\n  //  Adds a Cell <-> Cell Element mapping.\n  add(modelCell, cellElement) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(modelCell, 'modelCell is null or undefined');\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(cellElement, 'cellElement is null or undefined');\n    // cellElement.id set in CrosswordController.#newCellElement()\n    this.#modelCells[cellElement.id] = modelCell;\n  }\n\n  //  Gets the DOM element for a modelCell.\n  cellElement = (modelCell) => {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof modelCell === 'object', 'Cell is not an object');\n    // modelCell.cellElement set in CrosswordController.#newCellElement()\n    return modelCell.cellElement;\n  };\n\n  //  Gets the modelCell for a DOM element.\n  modelCell = (cellElement) => {\n    switch (typeof cellElement) {\n      case 'string':\n        return this.#modelCells[cellElement];\n      case 'object':\n        return this.#modelCells[cellElement.id];\n      default:\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(true, 'Unexpected type for \"cellElement\"');\n        break;\n    }\n  };\n\n  get modelCells() {\n    // this.#modelCells object properties are keyed by modelCell.toString()\n    // Retrieve the array of associated values (modelCell) for the Object keys\n    return Object.values(this.#modelCells);\n  }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/cell-map.mjs?");

/***/ }),

/***/ "./src/clue-model.mjs":
/*!****************************!*\
  !*** ./src/clue-model.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boldAsteriskRegex: () => (/* binding */ boldAsteriskRegex),\n/* harmony export */   boldItalicAsteriskRegex: () => (/* binding */ boldItalicAsteriskRegex),\n/* harmony export */   boldItalicUnderscoreRegex: () => (/* binding */ boldItalicUnderscoreRegex),\n/* harmony export */   boldUnderscoreRegex: () => (/* binding */ boldUnderscoreRegex),\n/* harmony export */   cluePattern: () => (/* binding */ cluePattern),\n/* harmony export */   clueRegex: () => (/* binding */ clueRegex),\n/* harmony export */   clueTextRegex: () => (/* binding */ clueTextRegex),\n/* harmony export */   italicAsteriskRegex: () => (/* binding */ italicAsteriskRegex),\n/* harmony export */   italicUnderscoreRegex: () => (/* binding */ italicUnderscoreRegex),\n/* harmony export */   labelPartsRegex: () => (/* binding */ labelPartsRegex),\n/* harmony export */   lengthPartsRegex: () => (/* binding */ lengthPartsRegex),\n/* harmony export */   newClueModel: () => (/* binding */ newClueModel),\n/* harmony export */   parseMarkdown: () => (/* binding */ parseMarkdown)\n/* harmony export */ });\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/helpers.mjs\");\n\n\nconst cluePattern = 'LabelText.ClueText(LengthText)';\n\n// Parse the groups: /^\\s*LabelText\\.ClueText\\(LengthText\\)\\s*$/\n// 'LabelText' is all characters from start up to but excluding the first period '.'.\n// Leading whitespace is ignored.\n// 'ClueText' is all characters after the first period up to but excluding the last\n// the last opening parenthesis '('\n// 'LengthText' is all characters after the last opening parenthesis up to but excluding\n// the last subsequent closing parenthesis ')'. Trailing whitespace is allowed.\nconst clueRegex = /^\\s*(.*?)\\.(.*)\\((.*)\\)\\s*$/;\n// Parse 'labelText' into 1+ clue segment labels: 1+ digits,\n// optionally followed by an 'a' or a 'd'.\n// The labels are separated by any sequence of 1+ non-alphanumeric\n// characters.\nconst labelPartsRegex = /^([^bce-z]*?)(\\d+[ad]?)\\s*(.*)/;\n// Parse 'clueText' from all leading and trailing whitespace\nconst clueTextRegex = /^\\s*(.*?)\\s*$/;\n// Parse 'lengthText' into 1+ whole-numbers.\n// The lengths are separated by any sequence of 1+ non-alphanumeric\n// characters, excluding parentheses.\n// Special case: acronyms\n// Acronym letters can including a trailing period for the last letter.\n// An example is clue 9a, The Age - Cryptic 08/09/2023\n// For example 'BBQ' -> (1.1.1.)\nconst lengthPartsRegex = /^([^a-z()\\d]*?)(\\d+)[\\s.]*(.*)/;\n\n// Refer to design document: ../docs/clue-markup.md\n\n// Clue markdown regular expressions\nconst boldAsteriskRegex = /(.*?)(\\*\\*.+?\\*\\*)(.*)$/;\nconst boldItalicAsteriskRegex = /(.*?)(\\*\\*\\*.+?\\*\\*\\*)(.*)$/;\nconst italicAsteriskRegex = /(.*?)(\\*[^*]+?\\*)(.*)$/;\nconst boldUnderscoreRegex = /(.*?)(__.+?__)(.*)$/;\nconst boldItalicUnderscoreRegex = /(.*?)(___.+?___)(.*)$/;\nconst italicUnderscoreRegex = /(.*?)(_[^_]+?_)(.*)$/;\n\n// Order is significant - decreasing markdown sequence length\n// Do NOT change!\nconst markdownTransforms = [\n  {\n    tag: '***',\n    regex: boldItalicAsteriskRegex,\n    html: { open: '<span class=\"cw-bold cw-italic\">', close: '</span>' },\n  },\n  {\n    tag: '___',\n    regex: boldItalicUnderscoreRegex,\n    html: { open: '<span class=\"cw-bold cw-italic\">', close: '</span>' },\n  },\n  {\n    tag: '**',\n    regex: boldAsteriskRegex,\n    html: { open: '<span class=\"cw-bold\">', close: '</span>' },\n  },\n  {\n    tag: '__',\n    regex: boldUnderscoreRegex,\n    html: { open: '<span class=\"cw-bold\">', close: '</span>' },\n  },\n  {\n    tag: '*',\n    regex: italicAsteriskRegex,\n    html: { open: '<span class=\"cw-italic\">', close: '</span>' },\n  },\n  {\n    tag: '_',\n    regex: italicUnderscoreRegex,\n    html: { open: '<span class=\"cw-italic\">', close: '</span>' },\n  },\n];\n\n/**\n *  Convert any markdown in _text_ to HTML.\n * @param {*} text source string with Markdown, or not!\n * @returns converted string\n */\nfunction parseMarkdown(text) {\n  // Initialise return value\n  let result = text;\n\n  // Iterate through all transforms, modifying result for all matches\n  markdownTransforms.forEach((mt) => {\n    let prelude,\n      match,\n      // Initialise remainder with converted 'text' to date\n      remainder = result;\n\n    // Test for transform match\n    if (mt.regex.test(remainder)) {\n      // Extract matching groups in regex from 'remainder'\n      let groups = mt.regex.exec(remainder);\n      // Reset result\n      result = '';\n      while (groups?.length === 4) {\n        [, prelude, match, remainder] = groups;\n        // Replace opening tag\n        match = match.replace(mt.tag, mt.html.open);\n        // Replace closing tag\n        match = match.replace(mt.tag, mt.html.close);\n        // Append processed text to result\n        result += prelude + match;\n        groups = mt.regex.exec(remainder);\n      }\n      // Append any remainder after matches exhausted\n      result += remainder;\n    }\n  });\n\n  return result;\n}\n\n//  Helper for newClueModel()\nfunction validateClueStructure(cdClue) {\n  const required = { x: 1, y: 1, clue: '1. Clue (1)' };\n  const optional = { answer: '', solution: '', revealed: '' };\n  const requiredKeys = Object.keys(required);\n  const optionalKeys = Object.keys(optional);\n  const cdKeys = Object.keys(cdClue);\n\n  // Test for presence of required keys\n  for (const rk of requiredKeys) {\n    if (!cdKeys.includes(rk)) throw new Error(`'cdClue.${rk}' is missing`);\n  }\n\n  // Test for type of required keys\n  for (const rk of requiredKeys) {\n    if (typeof required[rk] != typeof cdClue[rk]) {\n      throw new Error(\n        `'cdClue.${rk} (${cdClue[rk]})' must be a ${typeof required[rk]}`,\n      );\n    }\n  }\n\n  // Test for presence and type of optional keys\n  for (const ok of optionalKeys) {\n    if (cdKeys.includes(ok) && typeof optional[ok] != typeof cdClue[ok])\n      throw new Error(\n        `'cdClue.${ok} (${cdClue[ok]})' must be a ${typeof optional[ok]}`,\n      );\n  }\n\n  // Test for additional properties in cdClue\n\n  const difference = new Set(cdKeys);\n  for (const rk of requiredKeys) {\n    difference.delete(rk);\n  }\n  for (const ok of optionalKeys) {\n    difference.delete(ok);\n  }\n\n  if (difference.size > 0) {\n    throw new Error(\n      `'cdClue' has unexpected properties <${[...difference].join(',')}>`,\n    );\n  }\n\n  // Test if clue text matches expected pattern\n  if (!clueRegex.test(cdClue.clue)) {\n    throw new Error(\n      `Clue '${cdClue.clue}' does not match the required pattern '${cluePattern}'`,\n    );\n  }\n}\n\n//  Helper for newClueModel()\nfunction validateClueModelArguments(cdClue, isAcrossClue) {\n  if (cdClue === undefined || isAcrossClue === undefined) {\n    throw new Error(\"'cdClue' and 'isAcrossClue' are required\");\n  }\n\n  if (cdClue === null) {\n    throw new Error(\"'cdClue' can't be null\");\n  }\n\n  if (isAcrossClue === null) {\n    throw new Error(\"'isAcrossClue' can't be null\");\n  }\n\n  if (typeof isAcrossClue != 'boolean') {\n    throw new Error(\"'isAcrossClue' must be a boolean (true,false)\");\n  }\n}\n\n// Helper for newClueModel()\nfunction buildClueSegmentLabels(clueLabelText, cdClue) {\n  // Ensure any clue id values use lower case for the trailing 'a' or 'd'.\n  let remainingText = clueLabelText.toLowerCase();\n  let clueSegmentLabels = [];\n  while (labelPartsRegex.test(remainingText)) {\n    // Discard separator between segmentLabel and residual - see labelPartsRegex comments.\n    const [, , segmentLabel, residual] = labelPartsRegex.exec(remainingText);\n    clueSegmentLabels.push(segmentLabel);\n    remainingText = residual;\n  }\n\n  // remainingText should be an empty string ('')\n  if (remainingText) {\n    throw new Error(\n      `'${cdClue.clue}' Error in <LabelText> near <${remainingText}>`,\n    );\n  }\n  return clueSegmentLabels;\n}\n\n// Helper for newClueModel()\nfunction buildTailDescriptors(clueSegmentLabels) {\n  // Nested helper\n  function directionFromClueSegmentLabel(clueSegmentLabel) {\n    if (clueSegmentLabel.endsWith('a')) {\n      return 'across';\n    } else if (clueSegmentLabel.endsWith('d')) {\n      return 'down';\n    } else {\n      return null;\n    }\n  }\n\n  // Copy clueSegmentLabels and remove head/first segment\n  let tailSegmentLabels = clueSegmentLabels.slice(1);\n  let tailDescriptors = [];\n\n  // build tailDescriptors for multi-segment clue\n  if (tailSegmentLabels.length > 0) {\n    tailDescriptors = tailSegmentLabels.map((cs) => ({\n      headNumber: parseInt(cs, 10),\n      direction: directionFromClueSegmentLabel(cs),\n    }));\n  }\n  return tailDescriptors;\n}\n\n// Helper for newClueModel()\nfunction buildWordLengths(lengthParts, cdClue) {\n  let wordLengths = [];\n  let remainingText = lengthParts;\n\n  while (lengthPartsRegex.test(remainingText)) {\n    const [, , length, residual] = lengthPartsRegex.exec(remainingText);\n    wordLengths.push(parseInt(length, 10));\n    remainingText = residual;\n  }\n\n  // remainingText should be an empty string\n  if (remainingText) {\n    throw new Error(\n      `'${cdClue.clue}' Error in <LengthText> near <${remainingText}>`,\n    );\n  }\n  return wordLengths;\n}\n\n// Helper for newClueModel()\nconst getClueId = (headSegmentLabel, isAcrossClue) => {\n  // clueId is headNumber followed by direction suffix ('a' or 'd')...\n  // Check last character of headSegmentLabel and append if required\n  const directionSuffix = (isAcross) => {\n    return isAcross ? 'a' : 'd';\n  };\n  const directionSuffixRegex = /[ad]$/;\n  return directionSuffixRegex.test(headSegmentLabel)\n    ? headSegmentLabel\n    : headSegmentLabel + directionSuffix(isAcrossClue);\n};\n\n/**\n * Create a clue model from a clue read from a\n * _CrosswordDefinition_ [JSON](https://en.wikipedia.org/wiki/JSON) document.\n * @param cdClue - an object which defines the clue, with properties:\n * x: the zero-based grid column index of the starting letter of the clue\n * y: the zero-based grid row index of the starting letter of the clue\n * clue: the clue description string which has the format:\n *   \"<Number Structure>.<Clue>(<Answer Structure>)\"\n * @param isAcrossClue - a boolean indicating the clue orientation\n * @returns - the clue model for the given definition\n */\nfunction newClueModel(cdClue, isAcrossClue) {\n  // Test for null or undefined argument\n  validateClueModelArguments(cdClue, isAcrossClue);\n  // Test the properties and types of the cdClue argument\n  validateClueStructure(cdClue);\n\n  // Initialise array of crossword grid cell elements associated with\n  // clue - populated as part of crossword DOM\n  const cells = [];\n\n  //// Extract simple properties\n\n  const x = cdClue.x - 1; //  Clue labels are 1 based, clue models are more useful 0 based.\n  const y = cdClue.y - 1;\n  const isAcross = isAcrossClue;\n  // Initialise setter's solution for clue\n  const solution = cdClue.solution\n    ? // Strip out everything from solution except alphabetical characters\n      // DO NOT substitute spaces\n      cdClue.solution.toUpperCase().replaceAll(/[^A-Z]/g, '')\n    : undefined;\n  // Initialise revealed letters for clue\n  const revealed = cdClue.revealed\n    ? // string of upper-cased revealed characters\n      cdClue.revealed.toUpperCase()\n    : undefined;\n\n  //  Extract the clue components from the clue text in the crosswordDefinition\n  const [, labelParts, clueGroup, lengthParts] = clueRegex.exec(cdClue.clue);\n\n  //// Parse labelParts\n\n  const clueSegmentLabels = buildClueSegmentLabels(labelParts, cdClue);\n  const tailDescriptors = buildTailDescriptors(clueSegmentLabels);\n  //  headSegmentLabel is first of clueSegmentLabels\n  const [headSegmentLabel] = clueSegmentLabels;\n  const headNumber = parseInt(headSegmentLabel, 10);\n  const labelText = headNumber.toString();\n  const clueId = getClueId(headSegmentLabel, isAcross);\n\n  //// Parse clueGroup\n\n  const [, rawClueText] = clueTextRegex.exec(clueGroup);\n  const clueText = parseMarkdown(rawClueText);\n\n  //// Parse lengthParts\n\n  const lengthText = `(${lengthParts})`;\n  const wordLengths = buildWordLengths(lengthParts, cdClue);\n  //  Calculate the total length of the clue segment.\n  // Sum the lengths of the clue words\n  const segmentLength = wordLengths.reduce((current, wd) => current + wd, 0);\n\n  //// Initialise punter's answer for clue\n\n  const answer = cdClue.answer\n    ? cdClue.answer\n        // convert to uppercase\n        .toUpperCase()\n        // replace illegal characters with spaces\n        .replaceAll(/[^ A-Z]/g, ' ')\n        // pad out if required\n        .padEnd(segmentLength)\n    : // pad out null or undefined answer with spaces\n      ''.padEnd(segmentLength);\n\n  // Test if clue solution length matches segmentLength\n  if (solution && solution.length !== segmentLength) {\n    throw new Error(\n      `Length of clue solution '${solution}' does not match the lengthText '${lengthText}'`,\n    );\n  }\n\n  // Test if clue revealed length matches segmentLength\n  if (revealed && revealed.length !== segmentLength) {\n    throw new Error(\n      `Length of clue revealed characters '${revealed}' does not match the lengthText: ${segmentLength}`,\n    );\n  }\n\n  // Combine elements into object and exit\n  return {\n    answer,\n    cells,\n    clueId,\n    clueText,\n    headNumber,\n    isAcross,\n    labelText,\n    lengthText,\n    revealed,\n    segmentLength,\n    solution,\n    tailDescriptors,\n    wordLengths,\n    x,\n    y,\n    toString: () => {\n      return `${clueId}`;\n    },\n  };\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/clue-model.mjs?");

/***/ }),

/***/ "./src/crossword-cluesview.mjs":
/*!*************************************!*\
  !*** ./src/crossword-cluesview.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newCrosswordCluesView: () => (/* binding */ newCrosswordCluesView)\n/* harmony export */ });\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/helpers.mjs\");\n\n\n/**\n * **newCrosswordCluesView**: build a crossword clues DOM element\n * with separate blocks for across and down clues.\n * @param {*} document the root node of the [DOM](https://en.wikipedia.org/wiki/Document_Object_Model#DOM_tree_structure)\n * @param {*} controller the crossword controller object\n * @returns the clues DOM element\n */\nfunction newCrosswordCluesView(document, controller) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)('newCrosswordCluesView');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(document, '[document] is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '[controller] is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller.model, '[controller.model] is null or undefined');\n  // assert(controller.model.acrossClues,)\n  function newClueBlockElement(id, title) {\n    let cbElement = document.createElement('div');\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(cbElement, 'crossword-clue-block');\n    cbElement.id = id;\n    let titleElement = document.createElement('p');\n    titleElement.innerHTML = title;\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(titleElement, 'crossword-clue-block-title');\n    cbElement.appendChild(titleElement);\n    return cbElement;\n  }\n\n  function addClueElements(controller, clueBlockElement, cluesModel) {\n    cluesModel.forEach((mc) => {\n      let clueElement = document.createElement('div');\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(clueElement, 'crossword-clue');\n      clueElement.modelClue = mc;\n\n      let labelElement = document.createElement('span');\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(labelElement, 'crossword-clue-label');\n      labelElement.innerHTML = `${mc.labelText}`;\n      clueElement.appendChild(labelElement);\n\n      let textElement = document.createElement('span');\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(textElement, 'crossword-clue-text');\n      textElement.innerHTML = `${mc.clueText} ${mc.lengthText}`;\n      clueElement.appendChild(textElement);\n\n      // add handler for click event\n      clueElement.addEventListener('click', (element) => {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)(`clue(${mc.labelText}):click`);\n        // eslint-disable-next-line no-param-reassign\n        controller.lastMoveEvent = 'click';\n        // eslint-disable-next-line no-param-reassign\n        controller.currentClue = mc;\n      });\n      clueBlockElement.appendChild(clueElement);\n    });\n  }\n\n  function isCurrentClueSegment(clue) {\n    const currentClue = controller.currentClue;\n\n    // The trivial case is that the clue is selected.\n    if (clue === currentClue) {\n      return true;\n    } else {\n      //  We might also be a clue which is part of a multi-segment clue.\n      const headSegment = currentClue.headSegment;\n\n      return (\n        headSegment === clue || headSegment.tailSegments.indexOf(clue) !== -1\n      );\n    }\n  }\n\n  // Build the DOM for the crossword clues.\n  let view = {\n    wrapper: document.createElement('div'),\n    acrossClues: newClueBlockElement('crossword-across-clues', 'Across'),\n    downClues: newClueBlockElement('crossword-down-clues', 'Down'),\n  };\n\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(view.wrapper, 'crosswords-js');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(view.wrapper, 'crossword-clues');\n\n  addClueElements(controller, view.acrossClues, controller.model.acrossClues);\n  view.wrapper.appendChild(view.acrossClues);\n\n  addClueElements(controller, view.downClues, controller.model.downClues);\n  view.wrapper.appendChild(view.downClues);\n\n  // Handle when current clue has changed in controller\n  // eslint-disable-next-line no-param-reassign\n  controller.addEventsListener(['clueSelected'], (data) => {\n    for (const vac of view.acrossClues.children) {\n      if (isCurrentClueSegment(vac.modelClue)) {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(vac, 'current-clue-segment');\n      } else {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.removeClass)(vac, 'current-clue-segment');\n      }\n    }\n\n    for (const vdc of view.downClues.children) {\n      if (isCurrentClueSegment(vdc.modelClue)) {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(vdc, 'current-clue-segment');\n      } else {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.removeClass)(vdc, 'current-clue-segment');\n      }\n    }\n  });\n\n  return view.wrapper;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/crossword-cluesview.mjs?");

/***/ }),

/***/ "./src/crossword-controller-helpers.mjs":
/*!**********************************************!*\
  !*** ./src/crossword-controller-helpers.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Outcome: () => (/* binding */ Outcome),\n/* harmony export */   checkSolved: () => (/* binding */ checkSolved),\n/* harmony export */   cleanClue: () => (/* binding */ cleanClue),\n/* harmony export */   cleanCrossword: () => (/* binding */ cleanCrossword),\n/* harmony export */   resetClue: () => (/* binding */ resetClue),\n/* harmony export */   resetCrossword: () => (/* binding */ resetCrossword),\n/* harmony export */   revealCell: () => (/* binding */ revealCell),\n/* harmony export */   revealClue: () => (/* binding */ revealClue),\n/* harmony export */   revealCrossword: () => (/* binding */ revealCrossword),\n/* harmony export */   setCellText: () => (/* binding */ setCellText),\n/* harmony export */   testClue: () => (/* binding */ testClue),\n/* harmony export */   testCrossword: () => (/* binding */ testCrossword)\n/* harmony export */ });\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/helpers.mjs\");\n/* harmony import */ var _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crossword-gridview.mjs */ \"./src/crossword-gridview.mjs\");\n\n\n\nfunction revealCell(controller, cell) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(cell, '<cell> is null or undefined');\n  const clue = cell.acrossClue ? cell.acrossClue : cell.downClue;\n  const letterIndex = cell.acrossClue\n    ? cell.acrossClueLetterIndex\n    : cell.downClueLetterIndex;\n  const solutionLetter =\n    letterIndex < clue.solution?.length ? clue.solution[letterIndex] : ' ';\n  const clearRevealed = false;\n  setCellText(controller, cell, solutionLetter, clearRevealed);\n  // set visual flag in cell that letter has been revealed\n  (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_1__.showElement)(controller.revealedElement(cell));\n  // clear visual flag in cell if letter was incorrect\n  (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_1__.hideElement)(controller.incorrectElement(cell));\n}\n\nfunction revealClue(controller, clue) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(clue, '<clue> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)(`revealClue: '${clue}'`);\n  clue.headSegment.flatCells.forEach((cell) => {\n    revealCell(controller, cell);\n  });\n}\n\nfunction revealCrossword(controller) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  controller.model.lightCells.forEach((cell) => {\n    revealCell(controller, cell);\n  });\n}\n\nconst Outcome = Object.freeze({\n  correct: 0, // 0 elements empty, N elements correct\n  incorrect: 1, // 1+ elements incorrect\n  incomplete: 2, // 1+ elements empty, 0 elements incorrect\n});\n\nfunction getOutcome(incorrect, incomplete) {\n  if (incorrect) {\n    return Outcome.incorrect;\n  } else if (incomplete) {\n    return Outcome.incomplete;\n  } else {\n    return Outcome.correct;\n  }\n}\n\nfunction testCell(controller, cell, showIncorrect = true) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(cell, '<cell> is null or undefined');\n\n  // Get index of cell-letter in clue\n  // Cell can be in across and/or down clue\n  const [clue, letterIndex] = cell.acrossClue\n    ? [cell.acrossClue, cell.acrossClueLetterIndex]\n    : [cell.downClue, cell.downClueLetterIndex];\n  const answerLetter = clue.answer[letterIndex];\n  const solutionLetter = clue.solution ? clue.solution[letterIndex] : undefined;\n  const outcome = getOutcome(\n    !(answerLetter === solutionLetter || answerLetter === ' '),\n    answerLetter === ' ' || answerLetter === undefined,\n  );\n\n  if (outcome === Outcome.incorrect && showIncorrect) {\n    // set visual flag in cell that answer letter is incorrect\n    (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_1__.showElement)(controller.incorrectElement(cell));\n  }\n  return outcome;\n}\n\nfunction testClue(controller, clue, showIncorrect = true) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(clue, '<clue> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)(`testClue: '${clue}'`);\n\n  let incorrect = 0,\n    incomplete = 0;\n\n  clue.headSegment.flatCells.forEach((cell) => {\n    const outcome = testCell(controller, cell, showIncorrect);\n    if (outcome === Outcome.incorrect) {\n      incorrect += 1;\n    } else if (outcome === Outcome.incomplete) {\n      incomplete += 1;\n    }\n  });\n\n  return getOutcome(incorrect > 0, incomplete > 0);\n}\n\nfunction testCrossword(controller, showIncorrect = true) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  let incorrect = 0,\n    incomplete = 0;\n\n  controller.model.lightCells.forEach((cell) => {\n    const outcome = testCell(controller, cell, showIncorrect);\n    if (outcome === Outcome.incorrect) {\n      incorrect += 1;\n    } else if (outcome === Outcome.incomplete) {\n      incomplete += 1;\n    }\n  });\n\n  return getOutcome(incorrect > 0, incomplete > 0);\n}\n\nfunction checkSolved(controller) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  let incorrect = 0,\n    incomplete = 0;\n  const showIncorrect = false;\n  // short-circuit a non-correct result - use find()\n  controller.model.lightCells.find((cell) => {\n    const outcome = testCell(controller, cell, showIncorrect);\n    if (outcome === Outcome.incorrect) {\n      incorrect += 1;\n      return true;\n    } else if (outcome === Outcome.incomplete) {\n      incomplete += 1;\n      return true;\n    }\n  });\n\n  return getOutcome(incorrect > 0, incomplete > 0);\n}\n\nfunction setCellText(controller, cell, newText, clearRevealed = true) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(\n    cell?.acrossClue || cell?.downClue,\n    'cell is null or not part of a clue',\n  );\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(newText?.length === 1, 'newText must be a single character');\n\n  function adjustClue(clue, letterIndex) {\n    let result = clue;\n    result.answer = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setLetter)(result.answer, letterIndex, newText);\n    if (clearRevealed) {\n      result.revealed = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setLetter)(result.revealed, letterIndex, newText);\n    }\n  }\n  // Cell can be part of BOTH across and down clues\n\n  // Outcome for across clue\n  if (cell.acrossClue) {\n    let clue = cell.acrossClue;\n    // get index of cell-letter in clue\n    const letterIndex = cell.acrossClueLetterIndex;\n    // set stored values\n    adjustClue(clue, letterIndex);\n  }\n\n  // Outcome for down clue\n  if (cell.downClue) {\n    let clue = cell.downClue;\n    // get index of cell-letter in clue\n    const letterIndex = cell.downClueLetterIndex;\n    // set stored values\n    adjustClue(clue, letterIndex);\n  }\n  // eslint-disable-next-line no-param-reassign\n  controller.inputElement(cell).value = newText;\n}\n\nfunction resetCell(controller, cell, clearRevealed = false) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(cell, '<cell> is null or undefined');\n\n  // put a space in the cell\n  setCellText(controller, cell, ' ');\n  // remove visual flags in cell\n  (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_1__.hideElement)(controller.incorrectElement(cell));\n  if (clearRevealed) {\n    (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_1__.hideElement)(controller.revealedElement(cell));\n  }\n}\n\nfunction resetClue(controller, clue) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(clue, '<clue> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)(`resetClue: '${clue}'`);\n\n  clue.headSegment.flatCells.forEach((cell) => {\n    resetCell(controller, cell);\n  });\n}\n\nfunction resetCrossword(controller) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  controller.model.lightCells.forEach((cell) => {\n    const clearRevealed = true;\n    resetCell(controller, cell, clearRevealed);\n  });\n}\n\nfunction cleanCell(controller, cell) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(cell, '<cell> is null or undefined');\n\n  const wrongLetter = testCell(controller, cell) === Outcome.incorrect;\n  const clearRevealed = wrongLetter;\n  // is the current cell letter incorrect?\n  if (wrongLetter) {\n    setCellText(controller, cell, ' ', clearRevealed);\n    // remove visual flags in cell\n    (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_1__.hideElement)(controller.incorrectElement(cell));\n  }\n}\n\nfunction cleanClue(controller, clue) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(clue, '<clue> is null or undefined');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)(`cleanClue: '${clue}'`);\n  clue.headSegment.flatCells.forEach((cell) => {\n    cleanCell(controller, cell);\n  });\n}\n\nfunction cleanCrossword(controller) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)('cleanCrossword');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(controller, '<controller> is null or undefined');\n  controller.model.lightCells.forEach((cell) => {\n    cleanCell(controller, cell);\n  });\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/crossword-controller-helpers.mjs?");

/***/ }),

/***/ "./src/crossword-controller.mjs":
/*!**************************************!*\
  !*** ./src/crossword-controller.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CrosswordController: () => (/* binding */ CrosswordController),\n/* harmony export */   newCrosswordController: () => (/* binding */ newCrosswordController)\n/* harmony export */ });\n/* harmony import */ var _cell_map_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cell-map.mjs */ \"./src/cell-map.mjs\");\n/* harmony import */ var _crossword_cluesview_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crossword-cluesview.mjs */ \"./src/crossword-cluesview.mjs\");\n/* harmony import */ var _crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crossword-controller-helpers.mjs */ \"./src/crossword-controller-helpers.mjs\");\n/* harmony import */ var _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./crossword-gridview.mjs */ \"./src/crossword-gridview.mjs\");\n/* harmony import */ var _crossword_model_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./crossword-model.mjs */ \"./src/crossword-model.mjs\");\n/* harmony import */ var _default_eventbindings_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./default-eventbindings.mjs */ \"./src/default-eventbindings.mjs\");\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/helpers.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Build a new CrosswordController object\n * @param {*} crosswordDefinition A crossword puzzle document imported or parsed to create an Object.\n * @param {*} domGridParentElement The webpage location (DOM element) for the GridView.\n * @param {*} domCluesParentElement The webpage location (DOM element) for the CluesView.\n * @returns A CrosswordController on successful creation, or null on failure.\n */\n\nfunction newCrosswordController(\n  crosswordDefinition,\n  domGridParentElement,\n  domCluesParentElement,\n) {\n  const controller = new CrosswordController(\n    crosswordDefinition,\n    domGridParentElement,\n    domCluesParentElement,\n  );\n  return controller?.isValid ? controller : null;\n}\n\n// Regular expressions for keypress processing.\n// All pressed keys are lower-cased before testing\n//  - see'keypress' event listener\nconst echoingKeyPressCharacters = /^[a-z]$/;\nconst advancingKeyPressCharacters = /^[a-z]$/;\n\n// Allow DOM event flushing after clue or crossword solution.\nconst publicationDelayMs = 5;\n\n/** **CrosswordController** - an [MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)\n * _Controller_ class for the _CrosswordsJS_ package.\n * Use this class to access the package API.\n */\nclass CrosswordController {\n  #boundUserEventElements = [];\n  #cellMap = new _cell_map_mjs__WEBPACK_IMPORTED_MODULE_0__.CellMap();\n  #cluesView;\n  #crosswordModel;\n  #current = { clue: null, cell: null };\n  #domCluesParentElement;\n  #domGridParentElement;\n  #gridView;\n  #keyboardEventBindings = {};\n  #lastMoveEvent;\n  #pubSub = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.newPubSub)();\n  #eventSubscribers = [];\n  #userEventHandlers;\n  #isValidController = false;\n\n  // Events published by the CrosswordController\n  #controllerEventNames = [\n    'cellRevealed',\n    'clueCleaned',\n    'clueIncomplete',\n    'clueReset',\n    'clueRevealed',\n    'clueSelected',\n    'clueSolved',\n    'clueTested',\n    'crosswordCleaned',\n    'crosswordIncomplete',\n    'crosswordLoaded',\n    'crosswordReset',\n    'crosswordRevealed',\n    'crosswordSolved',\n    'crosswordTested',\n  ];\n\n  //////////////////////////\n  //// Lifecycle methods\n  //////////////////////////\n\n  constructor(\n    crosswordDefinition,\n    domGridParentElement,\n    domCluesParentElement,\n  ) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('CrosswordController constructor');\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n      crosswordDefinition?.width,\n      '[crosswordDefinition] argument is null/undefined or not a crossword definition',\n    );\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n      domGridParentElement?.ownerDocument,\n      '[domGridParentElement] argument is null/undefined or not a DOM element',\n    );\n    // Optional argument but must be valid if provided\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n      !domCluesParentElement || domCluesParentElement.ownerDocument,\n      '[domCluesParentElement] argument is not a DOM element',\n    );\n\n    this.#domGridParentElement = domGridParentElement;\n    this.#domCluesParentElement = domCluesParentElement;\n    // Set keyboard event keyBindings. Must precede gridView construction\n    this.setKeyboardEventBindings([_default_eventbindings_mjs__WEBPACK_IMPORTED_MODULE_5__.defaultKeyDownBinding, _default_eventbindings_mjs__WEBPACK_IMPORTED_MODULE_5__.defaultKeyUpBinding]);\n    // Create model and views\n    this.#isValidController = this.#bindDefinition(crosswordDefinition);\n    if (this.isValid) {\n      // Mapping of DOM idents (ids or classes) to event handler methods\n      this.#mapDomIdentsToUserEventHandlers();\n    }\n  }\n\n  //  Completely cleans up the crossword.\n  destroy() {\n    //  Clear the cellMap, DOM and state change handler.\n    this.#cellMap = null;\n    this.#crosswordModel = null;\n    this.#gridParent?.removeChild(this.gridView);\n    this.#cluesParent?.removeChild(this.cluesView);\n    // Remove all subscribers\n    this.#eventSubscribers.forEach((s) => {\n      s.remove();\n    });\n    // Remove all user event handlers from DOM elements\n    this.#boundUserEventElements.forEach((bl) => {\n      const { element, eventName, handler } = bl;\n      element.removeEventListener(eventName, handler);\n    });\n  }\n\n  //////////////////////////\n  //// Grid element helpers\n  //////////////////////////\n\n  // Helper function to retrieve corresponding cell for cellElement\n  cell = (cellElement) => {\n    return this.#cellMap.modelCell(cellElement);\n  };\n\n  // Helper function to retrieve corresponding cellElement for cell\n  cellElement = (cell) => {\n    return this.#cellMap.cellElement(cell);\n  };\n\n  // Helper function to retrieve corresponding inputElement for cell\n  inputElement = (cell) => {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(cell.light, `dark cell! ${cell}`);\n    // The input element of a cellElement is the first child element.\n    // Refer to #newCellElement()\n    return this.#cellMap.cellElement(cell).children[0];\n  };\n\n  // Helper function to retrieve corresponding revealedElement for cell\n  revealedElement = (cell) => {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(cell.light, `dark cell! ${cell}`);\n    // The revealed element of a cellElement is the second or third child element.\n    // Refer to #newCellElement()\n    const childIndex = cell.labelText ? 2 : 1;\n    return this.#cellMap.cellElement(cell).children[childIndex];\n  };\n\n  // Helper function to retrieve corresponding incorrectElement for cell\n  incorrectElement = (cell) => {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(cell.light, `dark cell! ${cell}`);\n    // The incorrect element of a cellElement is the third or fourth child element.\n    // Refer to #newCellElement()\n    const childIndex = cell.labelText ? 3 : 2;\n    return this.#cellMap.cellElement(cell).children[childIndex];\n  };\n\n  //////////////////////////////////\n  //// User EventHandler binding\n  //////////////////////////////////\n\n  // Helper function to access API event handler functions\n  userEventHandler(id) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`elementEventHandler:${id}`);\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n      this.#userEventHandlers.hasOwnProperty(id),\n      `[${id}] is not a CrosswordController event handler.`,\n    );\n    // We dereference userEventHandlers object like an array to get property 'id'.\n    // Note: 'this' inside an event handler is event.currentTarget.\n    // So, we must bind the controller object to 'this' to override\n    return this.#userEventHandlers[id].bind(this);\n  }\n\n  // Helper function to bind Controller user-event-handler to webpage\n  // DOM elementId.\n  bindUserEventHandlerToId(elementId, eventName = 'click', dom = document) {\n    const element = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.eid)(elementId, dom);\n    if (element) {\n      const handler = this.userEventHandler(elementId);\n      element.addEventListener(eventName, handler);\n      this.#boundUserEventElements.push({ element, eventName, handler });\n    }\n  }\n\n  // Helper function to bind Controller user-event-handlers to a collection\n  // of webpage DOM elementIds.\n  bindUserEventHandlersToIds(\n    // all controller user event handlers\n    elementIds = this.userEventHandlerIds,\n    eventName = 'click',\n    dom = document,\n  ) {\n    elementIds.forEach((id) => {\n      this.bindUserEventHandlerToId(id, eventName, dom);\n    });\n  }\n\n  // Helper function to bind Controller user-event-handler to webpage\n  // DOM element class. Using element class names rather than element Ids\n  // allows us to add controller user-event-handler to more than one\n  // DOM element\n  bindUserEventHandlerToClass(\n    elementClass,\n    eventName = 'click',\n    dom = document,\n  ) {\n    const elements = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.ecs)(elementClass, dom);\n    elements.forEach((element) => {\n      const handler = this.userEventHandler(elementClass);\n      element.addEventListener(eventName, handler);\n      this.#boundUserEventElements.push({ element, eventName, handler });\n    });\n  }\n\n  // Helper function to bind Controller user-event-handlers to a collection\n  // of webpage DOM elementIds.\n  bindUserEventHandlersToClass(\n    // all user event handlers\n    elementClasses = this.userEventHandlerIds,\n    eventName = 'click',\n    dom = document,\n  ) {\n    elementClasses.forEach((ec) =>\n      this.bindUserEventHandlerToClass(ec, eventName, dom),\n    );\n  }\n\n  ////////////////////////////////\n  //// Public property accessors\n  ////////////////////////////////\n\n  get isValid() {\n    return this.#isValidController;\n  }\n\n  // Accessors for public property currentCell\n  get currentCell() {\n    return this.#current.cell;\n  }\n  set currentCell(newCell) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`currentCell: ${newCell}`);\n    const oldCell = this.currentCell;\n    if (newCell !== oldCell) {\n      this.#current.cell = newCell;\n      this.inputElement(newCell).focus();\n      (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.styleCurrentCell)(this, newCell, oldCell);\n    }\n  }\n\n  // Accessors for public property currentClue\n  get currentClue() {\n    return this.#current.clue;\n  }\n  set currentClue(newClue) {\n    const oldClue = this.currentClue;\n    if (newClue !== oldClue) {\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`currentClue: '${newClue}' [currentCell ${this.currentCell}]`);\n      this.#current.clue = newClue;\n      (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.styleCurrentClue)(this, newClue, oldClue);\n      // check if new current clue includes current cell\n      if (!this.currentClue.cells.includes(this.currentCell)) {\n        // switch to first cell of new current clue\n        this.currentCell = newClue.cells[0];\n      }\n      this.#stateChange('clueSelected', newClue);\n    }\n  }\n\n  // Accessor for public property model\n  get model() {\n    return this.#crosswordModel;\n  }\n\n  // Accessor for public property gridView\n  get gridView() {\n    return this.#gridView;\n  }\n\n  // Accessor for public property cluesView\n  get cluesView() {\n    return this.#cluesView;\n  }\n\n  // Accessor for addEventsListener - public event publisher\n  get addEventsListener() {\n    return this.#addEventsListener;\n  }\n\n  // Accessor for public property controllerEventNames\n  get controllerEventNames() {\n    // Return array copy\n    return [...this.#controllerEventNames];\n  }\n\n  // Accessors for public property lastMoveEvent\n  get lastMoveEvent() {\n    return this.#lastMoveEvent;\n  }\n  set lastMoveEvent(eventName) {\n    const en = eventName.toLowerCase();\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(['click', 'focus'].includes(en), `unknown event: ${eventName}`);\n    this.#lastMoveEvent = en;\n  }\n  // Accessor for public property userEventHandlerIds\n  get userEventHandlerIds() {\n    return Object.keys(this.#userEventHandlers);\n  }\n\n  //////////////////////////\n  //// Public methods\n  //////////////////////////\n\n  /**\n   * Programmatically set the content of a crossword grid cell\n   * @param {*} cellElementId The id of the associated cell DOM element\n   * @param {*} character The new text content for the cell.\n   */\n  setGridCell(cellElementId, character) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`setCell:${cellElementId} '${character}}'`);\n    const clearRevealed = true;\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.setCellText)(\n      this,\n      this.#cellMap.modelCell(cellElementId),\n      character,\n      clearRevealed,\n    );\n  }\n\n  loadCrosswordSource(mimeType, crosswordSourceText, sourceFileName = '') {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(mimeType, '[mimeType] is undefined or null');\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(crosswordSourceText, '[crosswordSourceText] is undefined or null');\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`loadCrosswordSource: ${mimeType} ${sourceFileName}`);\n    // Build a crossword definition\n    const definition = (0,_crossword_model_mjs__WEBPACK_IMPORTED_MODULE_4__.newCrosswordDefinition)(mimeType, crosswordSourceText);\n    if (!definition) {\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(\n        `loadCrosswordSource: invalid crossword definition \"${sourceFileName}\"`,\n        'error',\n      );\n      return false;\n    }\n\n    return this.#bindDefinition(definition);\n  }\n\n  setKeyboardEventBindings(eventBindings) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n      eventBindings?.length,\n      '[eventBindings] argument is empty, null or undefined.',\n    );\n    const supportedEvents = ['keydown', 'keyup'];\n    eventBindings.forEach((eb) => {\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n        eb.eventName?.trim(),\n        `Missing or empty \"eventName\" property for event binding.`,\n      );\n      const ebn = eb.eventName.trim().toLowerCase();\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n        supportedEvents.includes(ebn),\n        `Binding event name \"${eb.eventName}\" is not supported.`,\n      );\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n        eb.keyBindings?.length,\n        `Missing or  empty \"keyBindings\" array property for [${ebn}].`,\n      );\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`setKeyboardEventBindings: Setting keyBindings for \"${ebn}\".`);\n      this.#keyboardEventBindings[ebn] = eb.keyBindings;\n    });\n  }\n\n  /////////////////////////////////\n  //// Public user event handlers\n  /////////////////////////////////\n\n  testCurrentClue() {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`testCurrentClue:${this.currentClue}`);\n    const showIncorrect = true;\n    const outcome = (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.testClue)(this, this.currentClue, showIncorrect);\n    this.#stateChange('clueTested', outcome);\n    if (outcome === _crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.Outcome.correct) {\n      this.#delayPublish('clueSolved', this.currentClue);\n    } else if (outcome === _crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.Outcome.incomplete) {\n      this.#delayPublish('clueIncomplete', this.currentClue);\n    }\n    return outcome;\n  }\n\n  testCrossword() {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('testCrossword');\n    const showIncorrect = true;\n    // call the crossword-controller-helper testCrossword\n    const outcome = (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.testCrossword)(this, showIncorrect);\n    this.#stateChange('crosswordTested', outcome);\n    if (outcome === _crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.Outcome.correct) {\n      this.#delayPublish('crosswordSolved', this.#crosswordModel);\n    } else if (outcome === _crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.Outcome.incomplete) {\n      this.#delayPublish('crosswordIncomplete', this.#crosswordModel);\n    }\n    return outcome;\n  }\n\n  revealCurrentCell() {\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.revealCell)(this, this.currentCell);\n    this.#stateChange('cellRevealed', this.currentCell);\n    this.#checkSolved();\n  }\n\n  revealCurrentClue() {\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.revealClue)(this, this.currentClue);\n    this.#stateChange('clueRevealed', this.currentClue);\n    this.#checkSolved();\n  }\n\n  revealCrossword() {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('revealCrossword');\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.revealCrossword)(this);\n    this.#stateChange('crosswordRevealed', this.model);\n    //No crosswordSolved event is published in this case\n  }\n\n  resetCurrentClue() {\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.resetClue)(this, this.currentClue);\n    this.#stateChange('clueReset', this.currentClue);\n  }\n\n  resetCrossword() {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('resetCrossword');\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.resetCrossword)(this);\n    this.#stateChange('crosswordReset', this.model);\n  }\n\n  cleanCurrentClue() {\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.cleanClue)(this, this.currentClue);\n    this.#stateChange('clueCleaned', this.currentClue);\n  }\n\n  cleanCrossword() {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('cleanCrossword');\n    (0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.cleanCrossword)(this);\n    this.#stateChange('crosswordCleaned', this.model);\n  }\n\n  //////////////////////////\n  //// Private methods\n  //////////////////////////\n\n  // Accessor for document associated with DOM\n  get #document() {\n    return this.#gridParent.ownerDocument;\n  }\n\n  // Accessors for DOM parent/placeholder elements\n\n  get #gridParent() {\n    return this.#domGridParentElement;\n  }\n\n  get #cluesParent() {\n    return this.#domCluesParentElement;\n  }\n  // Common logic for CrosswordController constructor and loadCrosswordSource()\n  #bindDefinition(crosswordDefinition) {\n    // Build a crossword model\n    const model = (0,_crossword_model_mjs__WEBPACK_IMPORTED_MODULE_4__.newCrosswordModel)(crosswordDefinition);\n    if (!model) {\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('#bindDefinition: crosswordModel creation failed', 'error');\n      return false;\n    }\n\n    // Do we have an existing model?\n    if (this.model) {\n      // Detach DOM elements dependent on old crosswordModel\n      this.#gridParent.removeChild(this.gridView);\n      this.#cluesParent?.removeChild(this.cluesView);\n      // Clear all mappings for old model\n      this.#cellMap = new _cell_map_mjs__WEBPACK_IMPORTED_MODULE_0__.CellMap();\n    }\n    ////  Rebuild and rebind for new model\n\n    this.#crosswordModel = model;\n\n    // (Re)build gridView and fill cellMap\n    this.#gridView = (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.newCrosswordGridView)(\n      this.#document,\n      this.model,\n      this.#cellMap,\n    );\n\n    // For light cells, wire up controller event listeners\n    this.#cellMap.modelCells\n      .filter((cell) => cell.light)\n      .forEach((lc) => {\n        this.#addCellEventListeners(lc.cellElement);\n        this.#addInputEventListeners(this.inputElement(lc));\n      });\n\n    //  Add the crossword grid to the webpage DOM\n    this.#gridParent.appendChild(this.gridView);\n\n    // Build the DOM for the crossword clues.\n    if (this.#cluesParent) {\n      this.#cluesView = (0,_crossword_cluesview_mjs__WEBPACK_IMPORTED_MODULE_1__.newCrosswordCluesView)(this.#document, this);\n      //  Add the crossword clues to the webpage DOM\n      this.#cluesParent.appendChild(this.cluesView);\n    }\n\n    // Select the first \"across\" head clue segment when the grid is complete and visible.\n    this.currentClue = this.model.acrossClues.headSegments[0];\n\n    // We're done! Publish event and go.\n    this.#stateChange('crosswordLoaded', crosswordDefinition);\n    return true;\n  }\n\n  // Helper function for constructor\n  #mapDomIdentsToUserEventHandlers = () => {\n    // Mapping of DOM element idents (ids or classes) to event handler methods\n    this.#userEventHandlers = {\n      // Reveal solution for current letter in answer. All revealed cells have\n      // distinct styling which remains for the duration of the puzzle.\n      // Public shaming is strictly enforced!\n      'reveal-cell': this.revealCurrentCell,\n      // Remove incorrect letters in the answer after testing.\n      'clean-clue': this.cleanCurrentClue,\n      // Clear out the answer for the current clue\n      'reset-clue': this.resetCurrentClue,\n      // Reveal solution for current clue\n      'reveal-clue': this.revealCurrentClue,\n      // Test the current clue answer against the solution. Incorrect letters\n      // have distinct styling which is removed when 'cleared' or a new letter\n      // entered in the cell.\n      'test-clue': this.testCurrentClue,\n      // Clear out all incorrect letters in the entire crossword\n      'clean-crossword': this.cleanCrossword,\n      // Clear out the entire crossword\n      'reset-crossword': this.resetCrossword,\n      // Reveal solutions for the entire crossword.\n      'reveal-crossword': this.revealCrossword,\n      // Test the answers for the entire crossword against the solutions\n      'test-crossword': this.testCrossword,\n    };\n  };\n\n  // Helper function to subscribe to CrosswordController events.\n  // Refer to #controllerEventNames for complete list of events.\n  #addEventsListener = (eventNames, callback) => {\n    eventNames.forEach((en) => {\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n        this.controllerEventNames.includes(en),\n        `event [${en}] is not a CrosswordController event.`,\n      );\n      this.#eventSubscribers.push(this.#pubSub.subscribe(en, callback));\n    });\n  };\n\n  // Helper for multi-segment current clue\n  #isSiblingClue = (clue) => {\n    return (\n      clue &&\n      (clue === this.currentClue.previousClueSegment ||\n        clue === this.currentClue.nextClueSegment)\n    );\n  };\n\n  #hasClueChanged = (focusCell) => {\n    // Helper\n    const resolution = (focusCell, newCurrentClue) => {\n      if (newCurrentClue !== this.currentClue) {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(\n          `Clue has changed [was ${this.currentClue}, ` +\n            `focused ${focusCell}] => ${newCurrentClue}`,\n        );\n        this.currentClue = newCurrentClue;\n      }\n    };\n\n    // assigned values below are clueModel references or undefined\n    const [previous, cellAcross, cellDown, ai, di] = [\n      this.currentClue,\n      focusCell.acrossClue,\n      focusCell.downClue,\n      focusCell.acrossClueLetterIndex,\n      focusCell.downClueLetterIndex,\n    ];\n    //  We are in the current clue\n    if ([cellAcross, cellDown].includes(this.currentClue)) {\n      resolution(focusCell, this.currentClue);\n    } else if (cellAcross ? !cellDown : cellDown) {\n      //  We have an across clue or a down clue, but not both (i.e. xor).\n      resolution(focusCell, cellAcross ?? cellDown);\n    } else if (this.#isSiblingClue(cellAcross)) {\n      //  We've got cellAcross. If we are moving between clue segments,\n      //  choose the next/previous segment\n      resolution(focusCell, cellAcross);\n    } else if (this.#isSiblingClue(cellDown)) {\n      //  We've got cellDown. If we are moving between clue segments,\n      //  choose the next/previous segment\n      resolution(focusCell, cellDown);\n    } else {\n      //  Prefer cellAcross, unless we're on the start of a down clue\n      //  and not the start of an across clue\n      resolution(focusCell, di === 0 && ai !== 0 ? cellDown : cellAcross);\n    }\n    return this.currentClue !== previous;\n  };\n\n  /**\n   * **#stateChange**: Publish an event to the listeners subscribed to _onStateChange_.\n   * @param {*} eventName The name of the event to be published\n   * @param {*} data not used\n   */\n  #stateChange(eventName, data) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`stateChange: ${eventName}`);\n    this.#pubSub.publish(eventName, data);\n  }\n\n  // Flush DOM event queue before publishing event\n  // Used to publish user notification events so pending events complete first.\n  #delayPublish(eventName, eventData) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(\n      this.controllerEventNames.includes(eventName),\n      `unknown event \"${eventName}\"`,\n    );\n    setTimeout(() => {\n      this.#stateChange(eventName, eventData);\n    }, publicationDelayMs);\n  }\n\n  // Helper to publish crosswordSolved event if the crossword is solved\n  #checkSolved() {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('checkSolved');\n    if ((0,_crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.checkSolved)(this) === _crossword_controller_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.Outcome.correct) {\n      this.#delayPublish('crosswordSolved', this.model);\n    }\n  }\n\n  // Assign event handlers to cell's input element\n  #addInputEventListeners(inputElement) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(inputElement, 'inputElement is null or undefined');\n    const controller = this;\n\n    // 1. A user clicking on or touching an unfocussed inputElement generates\n    //    two events (focus, click)\n    // 2. A user clicking on a focussed inputElement only produces a click event\n    // 3. Keyboard-based movements set currentCell programmatically,\n    //    and the setter method calls element.focus() only, AFTER setting\n    //    the currentCell value.\n\n    //  Listen for focus events.\n    inputElement.addEventListener('focus', (event) => {\n      //  Get the cell data.\n      const eventCell = controller.cell(event.target.parentNode);\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`event:focus ${eventCell}`);\n      // Have this event fired as a result of a touch or mouse click?\n      if (controller.currentCell !== eventCell) {\n        controller.currentCell = eventCell;\n      }\n      controller.lastMoveEvent = 'focus';\n      controller.#hasClueChanged(eventCell);\n    });\n\n    //  Listen for click events.\n    inputElement.addEventListener('click', (event) => {\n      const eventCell = controller.cell(event.target.parentNode);\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`event:click ${eventCell}`);\n      // Test for second click on same cell\n      if (eventCell === controller.currentCell) {\n        // We don't want this to toggle clue direction if\n        // immediately preceding event was a focus:\n        if (controller.lastMoveEvent === 'click') {\n          (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.toggleClueDirection)(controller, eventCell);\n        }\n      } else {\n        controller.currentCell = eventCell;\n      }\n      controller.lastMoveEvent = 'click';\n    });\n  }\n\n  // Assign event handlers to cell's input element\n  #addCellEventListeners(cellElement) {\n    const controller = this;\n\n    // Iterate over bindable keyboard events\n    Object.keys(controller.#keyboardEventBindings).forEach((eventName) => {\n      const keyBindings = controller.#keyboardEventBindings[eventName];\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.assert)(keyBindings, `\"${eventName}\" bindings are null or undefined.`);\n      cellElement.addEventListener(eventName, (event) => {\n        const eventKey = event.key;\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`event:${eventName} key=[${eventKey}]`);\n        const keyBinding = keyBindings.find((kb) => kb.key === eventKey);\n\n        if (keyBinding) {\n          //  We don't want default behaviour.\n          event.preventDefault();\n          const ekName = _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.EventKey.name(eventKey).toUpperCase();\n          (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(event.shiftKey ? `SHIFT+${ekName}` : ekName);\n          const eventCell = controller.cell(event.target.parentNode);\n          keyBinding.action(controller, event, eventCell);\n        }\n      });\n    });\n\n    //  Listen for keypress events.\n    cellElement.addEventListener('keypress', (event) => {\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('event:keypress');\n      // We've just pressed a key that generates a character.\n      // Stop default handling for input component\n      event.preventDefault();\n      //  Get cell data.\n      const [eventCell, character] = [\n        controller.cell(event.target.parentNode),\n        event.key,\n      ];\n      const [testCharacter, displayCharacter] = [\n        character.toLowerCase(),\n        character.toUpperCase(),\n      ];\n\n      if (echoingKeyPressCharacters.test(testCharacter)) {\n        //  Sets the letter in the current clue cell.\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)(`Setting cell content: [${displayCharacter}]`);\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.setCellContent)(controller, event, displayCharacter);\n        // remove any visual flag in cell that letter is incorrect\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.hideElement)(controller.incorrectElement(eventCell));\n        // test for crossword completion\n        controller.#checkSolved();\n      }\n\n      if (advancingKeyPressCharacters.test(testCharacter)) {\n        //  Move to the next cell in the clue.\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_6__.trace)('Advancing to next cell');\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_3__.moveToCellAhead)(controller, eventCell);\n      }\n    });\n  }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/crossword-controller.mjs?");

/***/ }),

/***/ "./src/crossword-gridview.mjs":
/*!************************************!*\
  !*** ./src/crossword-gridview.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventKey: () => (/* binding */ EventKey),\n/* harmony export */   deleteCellContent: () => (/* binding */ deleteCellContent),\n/* harmony export */   hideElement: () => (/* binding */ hideElement),\n/* harmony export */   moveToCellAhead: () => (/* binding */ moveToCellAhead),\n/* harmony export */   moveToCellBehind: () => (/* binding */ moveToCellBehind),\n/* harmony export */   moveToCellDown: () => (/* binding */ moveToCellDown),\n/* harmony export */   moveToCellLeft: () => (/* binding */ moveToCellLeft),\n/* harmony export */   moveToCellRight: () => (/* binding */ moveToCellRight),\n/* harmony export */   moveToCellUp: () => (/* binding */ moveToCellUp),\n/* harmony export */   moveToClueAhead: () => (/* binding */ moveToClueAhead),\n/* harmony export */   moveToClueBehind: () => (/* binding */ moveToClueBehind),\n/* harmony export */   newCrosswordGridView: () => (/* binding */ newCrosswordGridView),\n/* harmony export */   setCellContent: () => (/* binding */ setCellContent),\n/* harmony export */   showElement: () => (/* binding */ showElement),\n/* harmony export */   styleCurrentCell: () => (/* binding */ styleCurrentCell),\n/* harmony export */   styleCurrentClue: () => (/* binding */ styleCurrentClue),\n/* harmony export */   toggleClueDirection: () => (/* binding */ toggleClueDirection)\n/* harmony export */ });\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/helpers.mjs\");\n\n\n/**\n * Build a crossword grid DOM element\n * with separate blocks for across and down clues.\n * @param {*} document the root node of the [DOM](https://en.wikipedia.org/wiki/Document_Object_Model#DOM_tree_structure)\n * @param {*} model the crossword model object\n * @returns the grid DOM element\n */\n\nfunction newCrosswordGridView(document, model, cellMap) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)('newCrosswordGridView');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(\n    document,\n    'DOM root element [document] argument is null or undefined.',\n  );\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(model, 'CrosswordModel [model] argument is null or undefined.');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(\n    cellMap,\n    'CrosswordController [cellMap] argument is null or undefined.',\n  );\n\n  let gridView = document.createElement('div');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(gridView, 'crosswords-js');\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(gridView, 'crossword-grid');\n\n  // Set the grid size variables, refer to style/crosswords.less\n  // This lets us adjust the CSS grid size to match 'model' dimensions.\n  gridView.style.setProperty('--row-count', model.height);\n  gridView.style.setProperty('--column-count', model.width);\n\n  //  Create each cell.\n  for (let y = 0; y < model.height; y += 1) {\n    for (let x = 0; x < model.width; x += 1) {\n      const modelCell = model.cells[x][y];\n\n      //  Build the cell element.\n      const cellElement = newCellElement(document, modelCell);\n      //  Update the map of cells to enable element lookups\n      cellMap.add(modelCell, cellElement);\n      // Place cell in grid element\n      gridView.appendChild(cellElement);\n    }\n  }\n\n  return gridView;\n}\n\n/**\n * Build a crossword grid _cell_ DOM element with child elements.\n * @param {*} document the root node of the [DOM](https://en.wikipedia.org/wiki/Document_Object_Model#DOM_tree_structure)\n * @param {*} modelCell the representation of this grid cell in the  _crosswordModel_.\n * @returns the DOM element for the _cell_\n */\nfunction newCellElement(document, modelCell) {\n  let cellElement = document.createElement('div');\n  // Identify cellElement with id of associated modelCell.\n  // This simplifies implementation of CellMap\n  cellElement.id = modelCell;\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(cellElement, 'cwcell');\n  //  eslint-disable-next-line no-param-reassign\n  modelCell.cellElement = cellElement;\n  //  Add a class.\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(cellElement, modelCell.light ? 'light' : 'dark');\n\n  //  If the cell is dark, we are done.\n  if (!modelCell.light) {\n    return cellElement;\n  }\n\n  //  Light cells also need an input.\n  const inputElement = document.createElement('input');\n  // 'id' is not used, but assignment silences chromium-dev-tools issue.\n  inputElement.id = `input-${modelCell}`;\n  inputElement.maxLength = 1;\n  inputElement.size = 1;\n  if (modelCell.answer) {\n    inputElement.value = modelCell.answer;\n  }\n  cellElement.appendChild(inputElement);\n\n  //  We may need to add a clue label.\n  if (modelCell.labelText) {\n    const labelText = document.createElement('div');\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(labelText, 'cwclue-label');\n    labelText.innerHTML = modelCell.labelText;\n    cellElement.appendChild(labelText);\n  }\n\n  const revealedIndicator = document.createElement('div');\n  // Remove 'hidden' div class to reveal\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClasses)(revealedIndicator, ['cwcell-revealed', 'hidden']);\n  cellElement.appendChild(revealedIndicator);\n\n  const incorrectIndicator = document.createElement('div');\n  // Toggle 'hidden' div class to reveal/hide\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClasses)(incorrectIndicator, ['cwcell-incorrect', 'hidden']);\n  cellElement.appendChild(incorrectIndicator);\n\n  //  Check for clue answer segment terminators (across and/or down)\n  if (modelCell.acrossTerminator) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(inputElement, 'cw-across-word-separator');\n  }\n  if (modelCell.downTerminator) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(inputElement, 'cw-down-word-separator');\n  }\n\n  return cellElement;\n}\n\nfunction toggleClueDirection(crosswordController, eventCell) {\n  //  If we are in a eventCell with an across clue AND down clue, swap the\n  //  current clue.\n  const [ec, cc, swappable] = [\n    eventCell,\n    crosswordController,\n    eventCell.acrossClue && eventCell.downClue,\n  ];\n\n  if (swappable) {\n    // swap clue direction\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.trace)('toggleClueDirection');\n    // eslint-disable-next-line no-param-reassign\n    cc.currentClue =\n      ec.acrossClue === cc.currentClue ? ec.downClue : ec.acrossClue;\n  }\n\n  return swappable;\n}\n\nfunction moveToSegmentAhead(crosswordController, eventCell) {\n  const [ec, , clue] = [\n    eventCell,\n    crosswordController,\n    crosswordController.currentClue,\n  ];\n  const currentIndex =\n    ec.acrossClue === clue ? ec.acrossClueLetterIndex : ec.downClueLetterIndex;\n  const nextIndex = currentIndex + 1;\n  //  If we are at the end of the clue and we have a next segment, select it.\n  const jumpable = nextIndex === clue.cells.length && clue.nextClueSegment;\n\n  if (jumpable) {\n    // eslint-disable-next-line no-param-reassign\n    cc.currentClue = clue.nextClueSegment;\n  }\n\n  return jumpable;\n}\n\nfunction moveToSegmentBehind(crosswordController, eventCell) {\n  const [ec, cc] = [eventCell, crosswordController];\n  const clue = cc.currentClue;\n  const currentIndex =\n    ec.acrossClue === clue ? ec.acrossClueLetterIndex : ec.downClueLetterIndex;\n  const previousIndex = currentIndex - 1;\n  //  If we are at the start of the clue and we have a previous segment, select it.\n  const jumpable = previousIndex === -1 && clue.previousClueSegment;\n\n  if (jumpable) {\n    // eslint-disable-next-line no-param-reassign\n    cc.currentCell = clue.previousClueSegment.cells.slice(-1)[0];\n    // eslint-disable-next-line no-param-reassign\n    cc.currentClue = clue.previousClueSegment;\n  }\n\n  return jumpable;\n}\n\nfunction moveToCellDown(crosswordController, eventCell) {\n  const { x, y } = eventCell;\n  const { height } = eventCell.model;\n  let moved = false;\n\n  if (\n    eventCell.y + 1 < height &&\n    eventCell.model.cells[x][y + 1].light === true\n  ) {\n    // eslint-disable-next-line no-param-reassign\n    crosswordController.currentCell = eventCell.model.cells[x][y + 1];\n    moved = true;\n  } else {\n    // Can we go to next segment in clue?\n    moved = moveToSegmentAhead(crosswordController, eventCell);\n  }\n\n  return moved;\n}\n\nfunction moveToCellRight(crosswordController, eventCell) {\n  const { x, y } = eventCell;\n  const { width } = eventCell.model;\n  let moved = false;\n\n  if (\n    eventCell.x + 1 < width &&\n    eventCell.model.cells[x + 1][y].light === true\n  ) {\n    // eslint-disable-next-line no-param-reassign\n    crosswordController.currentCell = eventCell.model.cells[x + 1][y];\n    moved = true;\n  } else {\n    // Can we go to next segment in clue?\n    moved = moveToSegmentAhead(crosswordController, eventCell);\n  }\n\n  return moved;\n}\n\nfunction moveToCellUp(crosswordController, eventCell) {\n  const { x, y } = eventCell;\n  let moved = false;\n\n  if (eventCell.y > 0 && eventCell.model.cells[x][y - 1].light === true) {\n    // eslint-disable-next-line no-param-reassign\n    crosswordController.currentCell = eventCell.model.cells[x][y - 1];\n    moved = true;\n  } else {\n    // Can we go to previous segment in clue?\n    moved = moveToSegmentBehind(crosswordController, eventCell);\n  }\n\n  return moved;\n}\n\nfunction moveToCellLeft(crosswordController, eventCell) {\n  const { x, y } = eventCell;\n  let moved = false;\n\n  if (eventCell.x > 0 && eventCell.model.cells[x - 1][y].light === true) {\n    // eslint-disable-next-line no-param-reassign\n    crosswordController.currentCell = eventCell.model.cells[x - 1][y];\n    moved = true;\n  } else {\n    // Can we go to previous segment in clue?\n    moved = moveToSegmentBehind(crosswordController, eventCell);\n  }\n\n  return moved;\n}\n\nfunction moveToCellAhead(crosswordController, eventCell) {\n  // move to previous cell in current clue\n  if (crosswordController.currentClue === eventCell.acrossClue) {\n    return moveToCellRight(crosswordController, eventCell);\n  } else if (crosswordController.currentClue === eventCell.downClue) {\n    return moveToCellDown(crosswordController, eventCell);\n  }\n}\n\nfunction moveToCellBehind(crosswordController, eventCell) {\n  // move to previous cell in current clue\n  if (crosswordController.currentClue === eventCell.acrossClue) {\n    return moveToCellLeft(crosswordController, eventCell);\n  } else if (crosswordController.currentClue === eventCell.downClue) {\n    return moveToCellUp(crosswordController, eventCell);\n  }\n}\n\nconst getHeadClues = (crosswordModel, clue) => {\n  return clue.isAcross\n    ? [\n        crosswordModel.acrossClues.headSegments,\n        crosswordModel.downClues.headSegments,\n      ]\n    : [\n        crosswordModel.downClues.headSegments,\n        crosswordModel.acrossClues.headSegments,\n      ];\n};\n\nfunction moveToClueAhead(controller, eventCell) {\n  const clue = controller.currentClue.headSegment;\n  const [headClues, orthogonalHeadClues] = getHeadClues(eventCell.model, clue);\n  const hci = headClues.indexOf(clue);\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(hci !== -1, `clue '${clue.clueId}' not found in headClues`);\n\n  // eslint-disable-next-line no-param-reassign\n  controller.currentClue =\n    hci === headClues.length - 1\n      ? // current head is last - flip direction, get first head clue\n        orthogonalHeadClues[0]\n      : // get next head\n        headClues[hci + 1];\n}\n\nfunction moveToClueBehind(controller, eventCell) {\n  const clue = controller.currentClue.headSegment;\n  const [headClues, orthogonalHeadClues] = getHeadClues(eventCell.model, clue);\n  const hci = headClues.indexOf(clue);\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(hci !== -1, `clue '${clue.clueId}' not found in headClues`);\n\n  // eslint-disable-next-line no-param-reassign\n  controller.currentClue =\n    hci === 0\n      ? // current head is first - flip direction, get last head clue\n        orthogonalHeadClues.slice(-1)[0]\n      : // get previous head\n        headClues[hci - 1];\n}\n\nfunction deleteCellContent(crosswordController, event, eventCell) {\n  // Fill cell with SPACE\n  setCellContent(crosswordController, event, ' ');\n  // remove any visual flag in cell that letter is incorrect\n  hideElement(crosswordController.incorrectElement(eventCell));\n}\n\nfunction setCellContent(crosswordController, event, character) {\n  const ec = crosswordController.cell(event.target.parentNode);\n\n  //  eslint-disable-next-line no-param-reassign\n  event.target.value = character;\n\n  //  We need to update the answers\n  if (ec.acrossClue) {\n    ec.acrossClue.answer = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setLetter)(\n      ec.acrossClue.answer,\n      ec.acrossClueLetterIndex,\n      character,\n    );\n  }\n  // across and/or down are possible\n  if (ec.downClue) {\n    ec.downClue.answer = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setLetter)(\n      ec.downClue.answer,\n      ec.downClueLetterIndex,\n      character,\n    );\n  }\n}\n\nconst hideElement = (element) => {\n  element?.classList.add('hidden');\n};\n\nconst showElement = (element) => {\n  element?.classList.remove('hidden');\n};\n\n//  Style the currentClue.\nfunction styleCurrentClue(controller, newClue, oldClue) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(newClue, 'newClue is undefined');\n  // Remove styles from the oldClue\n  oldClue?.headSegment.flatCells.forEach((cell) => {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.removeClass)(controller.inputElement(cell), 'active');\n  });\n  newClue.headSegment.flatCells.forEach((cell) => {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(controller.inputElement(cell), 'active');\n  });\n}\n\n//  Style the currentCell.\nfunction styleCurrentCell(controller, newCell, oldCell) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.assert)(newCell, 'newCell is undefined');\n  // Remove styles from the oldCell\n  if (oldCell) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.removeClass)(controller.inputElement(oldCell), 'highlighted');\n  }\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.addClass)(controller.inputElement(newCell), 'highlighted');\n}\n\nconst EventKey = Object.freeze({\n  backspace: 'Backspace',\n  delete: 'Delete',\n  down: 'ArrowDown',\n  enter: 'Enter',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n  space: ' ',\n  tab: 'Tab',\n  up: 'ArrowUp',\n  shift: 'Shift',\n  alt: 'Alt',\n  ctrl: 'Control',\n  name: (eventKey) => {\n    // entry is an array [key, value]\n    const entry = Object.entries(EventKey).find(\n      (entry) => entry[1] === eventKey,\n    );\n    return entry ? entry[0] : null;\n  },\n});\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/crossword-gridview.mjs?");

/***/ }),

/***/ "./src/crossword-model.mjs":
/*!*********************************!*\
  !*** ./src/crossword-model.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertSourceFileToDefinition: () => (/* binding */ convertSourceFileToDefinition),\n/* harmony export */   isWordSeparatorIndex: () => (/* binding */ isWordSeparatorIndex),\n/* harmony export */   newCrosswordDefinition: () => (/* binding */ newCrosswordDefinition),\n/* harmony export */   newCrosswordModel: () => (/* binding */ newCrosswordModel)\n/* harmony export */ });\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! yaml */ \"./node_modules/yaml/browser/index.js\");\n/* harmony import */ var _clue_model_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clue-model.mjs */ \"./src/clue-model.mjs\");\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/helpers.mjs\");\n\n\n\n\n/**\n * **newCrosswordModel**: build a crossword model from a crosswordDefinition object.\n * - The function compiles a JSON crossword and emits diagnostic exceptions when errors are encountered.\n * @param {*} crosswordDefinition A javascript Object typically parsed or imported from a crossword description file in JSON or YAML format.\n * @returns a crossword model object\n */\nfunction newCrosswordModel(crosswordDefinition) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.trace)('newCrosswordModel');\n\n  if (!validateCrosswordDefinition(crosswordDefinition)) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.trace)(\n      'newCrosswordModel: The model must be initialised with a valid crossword definition.',\n      `error`,\n    );\n    return null;\n  }\n\n  //  Create the basic crosswordModel structure.\n  let crosswordModel = initialiseCrosswordModel(crosswordDefinition);\n  //  Create the array of cells. Each element has a reference back to the crosswordModel\n  //  for convenience.\n  crosswordModel.cells = buildCellGrid(crosswordModel);\n\n  //  Add all the crosswordDefinition clues to the crosswordModel.\n  const isAcross = /across/i;\n  ['acrossClues', 'downClues'].forEach((clues) => {\n    crosswordDefinition[clues].forEach(\n      addClueToModel(crosswordModel, isAcross.test(clues)),\n    );\n  });\n\n  //  Process any multi-segment clues.\n  [...crosswordModel.acrossClues, ...crosswordModel.downClues].forEach(\n    addMultiSegmentProperties(crosswordModel),\n  );\n\n  // Assign lightCells property\n  crosswordModel.lightCells = crosswordModel.cells\n    .flat()\n    .filter((cell) => cell.light);\n\n  // Assign headSegment (array) properties to model's acrossClues and downClues arrays.\n  ['acrossClues', 'downClues'].forEach((clues) => {\n    crosswordModel[clues].headSegments = crosswordModel[clues].filter(\n      (c) => c === c.headSegment,\n    );\n  });\n\n  return crosswordModel;\n}\n\n// Helper for newCrosswordModel()\nfunction buildCellGrid(crosswordModel) {\n  const { width } = crosswordModel;\n  const { height } = crosswordModel;\n  const array = new Array(width);\n  for (let x = 0; x < width; x += 1) {\n    array[x] = new Array(height);\n    for (let y = 0; y < height; y += 1) {\n      // assign cell object\n      array[x][y] = {\n        model: crosswordModel,\n        x,\n        y,\n        toString: () => {\n          return `(${x},${y})`;\n        },\n      };\n    }\n  }\n  return array;\n}\n\n// Helper for newCrosswordModel()\n/**\n * Is the character at letterIndex the last letter of a non-terminal\n * word in a multi-word sequence?\n * @param {*} letterIndex\n * @param {*} wordLengths array of word lengths\n * @returns boolean\n */\nfunction isWordSeparatorIndex(letterIndex, wordLengths) {\n  if (letterIndex >= 0) {\n    let remainingIndex = letterIndex;\n    let index = 0;\n    while (index < wordLengths.length) {\n      const wl = wordLengths[index];\n      if (remainingIndex < wl) {\n        return (\n          // is a word terminator\n          remainingIndex === wl - 1 &&\n          //  is not last word\n          index !== wordLengths.length - 1\n        );\n      } else {\n        remainingIndex -= wl;\n        index += 1;\n      }\n    }\n  }\n  return false;\n}\n\n// Helper for newCrosswordModel()\nfunction initialiseCrosswordModel(crosswordDefinition) {\n  let crosswordModel = {\n    width: crosswordDefinition.width,\n    height: crosswordDefinition.height,\n    acrossClues: [],\n    downClues: [],\n    cells: [],\n  };\n  if (\n    crosswordModel.width === undefined ||\n    crosswordModel.width === null ||\n    crosswordModel.width < 0 ||\n    crosswordModel.height === undefined ||\n    crosswordModel.height === null ||\n    crosswordModel.height < 0\n  ) {\n    throw new Error('The crossword bounds are invalid.');\n  }\n  return crosswordModel;\n}\n\n// Helper for newCrosswordModel()\nfunction validateCrosswordDefinition(crosswordDefinition) {\n  const versionRegex = /^1\\.0$/;\n\n  function error(message) {\n    (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.trace)(`validateCrosswordDefinition: ${message}`, 'error');\n    return false;\n  }\n  function normalise(text) {\n    return text.toString().trim().toLowerCase();\n  }\n\n  const cd = crosswordDefinition;\n\n  // Test supplied arguments\n\n  if (!cd) {\n    return error('[crosswordDefinition] argument is undefined or null');\n  }\n\n  // Test for document element\n  else if (!cd.document) {\n    return error('Missing \"document\" element');\n  }\n  // Test for document.mimetype element\n  else if (!cd.document?.mimetype) {\n    return error('Missing \"document.mimetype\" element');\n  } else {\n    const mimeType = normalise(cd.document.mimetype);\n\n    // Test for valid mimetype\n\n    if (mimeType !== 'application/vnd.js-crossword') {\n      return error(\n        `Unsupported \"document.mimetype\" (${mimeType}) Expected: application/vnd.js-crossword`,\n      );\n    }\n    // Test for document.version element\n    else if (!cd.document?.version) {\n      return error('Missing \"document.mimetype\" element');\n    }\n\n    // Test for supported version\n    else {\n      const version = normalise(cd.document.version);\n\n      // Final test!\n      return versionRegex.test(version)\n        ? true\n        : error(`Unsupported document version (${version}) Expected: 1.0`);\n    }\n  }\n}\n\n// Helper for newCrosswordModel()\nfunction validateClueInCrossword(clueModel, crosswordModel, isAcrossClue) {\n  if (\n    clueModel.x < 0 ||\n    clueModel.x >= crosswordModel.width ||\n    clueModel.y < 0 ||\n    clueModel.y >= crosswordModel.height\n  ) {\n    throw new Error(`Clue ${clueModel} doesn't start in the bounds.`);\n  }\n\n  //  Make sure the clue is not too long.\n  if (isAcrossClue) {\n    if (clueModel.x + clueModel.segmentLength > crosswordModel.width) {\n      throw new Error(`Clue ${clueModel} exceeds horizontal bounds.`);\n    }\n    // down clue\n  } else if (clueModel.y + clueModel.segmentLength > crosswordModel.height) {\n    throw new Error(`Clue ${clueModel} exceeds vertical bounds.`);\n  }\n}\n\n// Helper for newCrosswordModel()\nfunction updateOrthogonalClueAnswer(cell, answer, isAcrossClue) {\n  //  eslint-disable-next-line no-param-reassign\n\n  //  We need to update the answers\n  if (!isAcrossClue && cell.acrossClue) {\n    //  eslint-disable-next-line no-param-reassign\n    cell.acrossClue.answer = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.setLetter)(\n      cell.acrossClue.answer,\n      cell.acrossClueLetterIndex,\n      answer,\n    );\n  }\n  if (isAcrossClue && cell.downClue) {\n    //  eslint-disable-next-line no-param-reassign\n    cell.downClue.answer = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.setLetter)(\n      cell.downClue.answer,\n      cell.downClueLetterIndex,\n      answer,\n    );\n  }\n}\n\n// Curried function returns a function to map a tailSegmentDescriptor to its clueModel (clue)\nconst tailDescriptorConverter = (crosswordModel) => {\n  return (tailDescriptor) => {\n    const cm = crosswordModel;\n    const td = tailDescriptor;\n    const hn = td.headNumber;\n\n    switch (td.direction) {\n      case 'across':\n        // non-terminal\n        return cm.acrossClues.find((ac) => ac.headNumber === hn);\n      case 'down':\n        // non-terminal\n        return cm.downClues.find((dc) => dc.headNumber === hn);\n      default:\n        // terminal (direction === null)\n        return (\n          cm.acrossClues.find((ac) => ac.headNumber === hn) ||\n          cm.downClues.find((dc) => dc.headNumber === hn)\n        );\n    }\n  };\n};\n\n// Curried function returns a function to add a crosswordDefinition clue to a crosswordModel\nfunction addClueToModel(crosswordModel, isAcrossClue) {\n  return (cdClue) => {\n    //  Compile the clue model from the crossword definition of the clue\n    const clueModel = (0,_clue_model_mjs__WEBPACK_IMPORTED_MODULE_1__.newClueModel)(cdClue, isAcrossClue);\n    //  Add clue model to crosswordModel clues array.\n    crosswordModel[isAcrossClue ? 'acrossClues' : 'downClues'].push(clueModel);\n\n    //  The clue position must be in the bounds.\n    validateClueInCrossword(clueModel, crosswordModel, isAcrossClue);\n\n    //  We can now mark the cells as light. If the clue has\n    //  an answer (which is optional), we can validate it\n    //  is coherent.\n    let { x, y } = clueModel;\n    for (\n      let letterIndex = 0;\n      letterIndex < clueModel.segmentLength;\n      letterIndex += 1\n    ) {\n      const cell = crosswordModel.cells[x][y];\n      cell.light = true;\n      cell[isAcrossClue ? 'acrossClue' : 'downClue'] = clueModel;\n      cell[isAcrossClue ? 'acrossClueLetterIndex' : 'downClueLetterIndex'] =\n        letterIndex;\n      clueModel.cells.push(cell);\n\n      //  Check if we need to add a word separator to the grid cell.\n      if (isWordSeparatorIndex(letterIndex, clueModel.wordLengths)) {\n        cell[clueModel.isAcross ? 'acrossTerminator' : 'downTerminator'] = true;\n      }\n\n      //  If the imported clue has an answer we set it in the cell...\n      setCellAnswer(cell, clueModel, letterIndex, cdClue.answer, isAcrossClue);\n      //  If the imported clue has a solution we set it in the cell...\n      setCellSolution(cell, clueModel, letterIndex, cdClue.solution);\n      //  //  Set label for first cell, and check against existing value\n      setCellLabel(letterIndex, cell, clueModel);\n\n      if (isAcrossClue) {\n        x += 1;\n      } else {\n        y += 1;\n      }\n    }\n  };\n}\n\nfunction setCellLabel(letterIndex, cell, clueModel) {\n  if (letterIndex === 0) {\n    if (cell.labelText && cell.labelText !== clueModel.headNumber) {\n      throw new Error(\n        `Clue ${clueModel} has a label which is inconsistent with another clue (${cell.acrossClue}).`,\n      );\n    }\n    // eslint-disable-next-line no-param-reassign\n    cell.labelText = clueModel.headNumber;\n  }\n}\n\n// Curried function returns a function to add multi-segment properties to a clueModel\nfunction addMultiSegmentProperties(crosswordModel) {\n  return (cmClue) => {\n    //  Find the connected clues. Pass curried iterator function\n    //  eslint-disable-next-line no-param-reassign\n    cmClue.tailSegments = cmClue.tailDescriptors.map(\n      tailDescriptorConverter(crosswordModel),\n    );\n\n    //  Rebuild the lengthText.\n    //  For head clue segments, it will be the aggregate of the multi-word descriptors for each segment.\n    //  For tail clue segments, it will be the multi-word descriptors for itself (no change).\n    const multiSegmentLengths = [\n      ...cmClue.wordLengths,\n      ...cmClue.tailSegments.flatMap((ts) => ts.wordLengths),\n    ];\n    //  eslint-disable-next-line no-param-reassign\n    cmClue.lengthText = `(${multiSegmentLengths})`;\n\n    //  Each clue should know its head segment as well as the next and\n    //  previous clue segments.\n    let clueSegmentIndex = 0;\n    const clueSegments = [cmClue, ...cmClue.tailSegments];\n\n    clueSegments.forEach((cs) => {\n      //  Set the head segment for _each_ clue segment via destructuring.\n      //  Note that the head segment for a one-segment clue is itself.\n      //  eslint-disable-next-line no-param-reassign\n      [cs.headSegment] = clueSegments;\n\n      // Assign previousClueSegment (all except first)\n      if (clueSegmentIndex > 0) {\n        //  eslint-disable-next-line no-param-reassign\n        cs.previousClueSegment = clueSegments[clueSegmentIndex - 1];\n      }\n\n      // Assign nextClueSegment (all except last)\n      if (clueSegmentIndex < clueSegments.length - 1) {\n        //  eslint-disable-next-line no-param-reassign\n        cs.nextClueSegment = clueSegments[clueSegmentIndex + 1];\n      }\n      clueSegmentIndex += 1;\n    });\n\n    // Assign flatCells property to head segment\n    clueSegments[0].flatCells =\n      clueSegments.length === 1\n        ? clueSegments[0].cells\n        : // Remove duplicates from intersecting multiple segments by constructing a set\n          new Set(clueSegments.flatMap((cs) => cs.cells));\n\n    //  Rewrite the clue label.\n    //  Head clues will get a comma-separated list of connected segments.\n    //  eslint-disable-next-line no-param-reassign\n    cmClue.labelText = `${[cmClue.headNumber]\n      .concat(cmClue.tailSegments.map((ts) => ts.headNumber))\n      .join(',')}.`;\n\n    //  The tail clues have no lengthText\n    cmClue.tailSegments.forEach((ts) => {\n      //  eslint-disable-next-line no-param-reassign\n      ts.lengthText = '';\n    });\n  };\n}\n\n/**\n * **convertSourceFileToDefinition** build a _crosswordDefinition_ from a YAML or JSON file.\n * @param {*} mimeType The [MIME](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) type of the\n * _documentText_: `application/json` or `application/yaml`\n * @param {*} crosswordSourcePath system file path to a JSON or YAML crosswordSource.\n * @returns {*} a crosswordDefinition Object on successful conversion, or null.\n *\n * > NOTE: This function can't be called from client/browser code.\n * > Local file system access is typically not allowed in that context.\n */\nfunction convertSourceFileToDefinition(mimeType, crosswordSourcePath) {\n  (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.assert)(fileExists(crosswordSourcePath));\n  const crosswordSource = readFileSync(crosswordSourcePath, {\n    encoding: 'utf8',\n    flag: 'r',\n  });\n\n  return newCrosswordDefinition(mimeType, crosswordSource.toString());\n}\n\n// Helper function to build a CrosswordDefinition\n\n/**\n * **newCrosswordDefinition** build a _crosswordDefinition_ from a _crosswordSource_ in JSON or YAML format.\n * @param {*} mimeType The [MIME](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) type of the\n * _documentText_, `application/json` or `application/yaml`\n * @param {*} crosswordSource a structured text description of a crossword puzzle in _mimeType_ format.\n * @returns {*} a crosswordDefinition object on successful conversion, or null.\n */\nfunction newCrosswordDefinition(mimeType, crosswordSource) {\n  let parsedDocument;\n  switch (mimeType.trim().toLowerCase()) {\n    case 'application/json':\n      try {\n        parsedDocument = JSON.parse(crosswordSource);\n      } catch (error) {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.trace)(\n          `newCrosswordDefinition: [documentText] is not a simple JSON object.\\n` +\n            `Error: ${error.message}\\n`,\n          `error`,\n        );\n        return null;\n      }\n      break;\n    case 'application/yaml':\n    case 'application/x-yaml':\n      try {\n        parsedDocument = yaml__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(crosswordSource);\n      } catch (error) {\n        (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.trace)(\n          `newCrosswordDefinition: [documentText] is not a YAML object.\\n` +\n            `Error: ${error.message}\\n`,\n          `error`,\n        );\n        return null;\n      }\n      break;\n    default:\n      (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_2__.trace)(\n        `newCrosswordDefinition: Unsupported file type: (${mimeType})`,\n        'error',\n      );\n      return null;\n  }\n  return validateCrosswordDefinition(parsedDocument) ? parsedDocument : null;\n}\n\nfunction propertyErrorText(clueModel, cell, letterIndex, property) {\n  const gridCoords = `(${clueModel.x + 1},${clueModel.y + 1})`;\n  const propVal = `[${clueModel[property]}[${letterIndex + 1}],${\n    clueModel[property][letterIndex]\n  }]`;\n  const prevClue = `(${cell.acrossClue})`;\n  const prevVal = `[${cell.acrossClue[property]},${cell[property]}]`;\n\n  return (\n    `Clue ${clueModel} ${property} at ${gridCoords} ${propVal} is not coherent` +\n    ` with previous clue ${prevClue} ${property} ${prevVal}.`\n  );\n}\n\n// Helper function to set solution letter in a cell\nfunction setCellSolution(cell, clueModel, letterIndex, clueSolution) {\n  const cellDefaultSolution = ' ';\n\n  if (clueSolution) {\n    //  ...set solution only if it is NOT different to an existing solution.\n    if (\n      cell.solution &&\n      // We can overwrite any cells that have the default value\n      cell.solution !== cellDefaultSolution &&\n      cell.solution !== clueModel.solution[letterIndex]\n    ) {\n      throw new Error(\n        propertyErrorText(clueModel, cell, letterIndex, 'solution'),\n      );\n    } else {\n      // if (cell.solution && cell.solution !== ' '\n      // eslint-disable-next-line no-param-reassign\n      cell.solution = clueModel.solution[letterIndex];\n    }\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    cell.solution = cellDefaultSolution;\n  }\n}\n\n// Helper function to set answer letter in a cell\nfunction setCellAnswer(cell, clueModel, letterIndex, clueAnswer, isAcrossClue) {\n  const cellDefaultAnswer = ' ';\n\n  if (clueAnswer) {\n    const clueAnswerLetter = clueModel.answer[letterIndex];\n\n    //  ...but only if it is not different to an existing answer.\n    if (\n      cell.answer &&\n      // We can overwrite any cells that have default value\n      cell.answer !== cellDefaultAnswer &&\n      cell.answer !== clueAnswerLetter\n    ) {\n      throw new Error(\n        propertyErrorText(clueModel, cell, letterIndex, 'answer'),\n      );\n    }\n    // if cell.answer && cell.answer !== ' '\n    // eslint-disable-next-line no-param-reassign\n    cell.answer = clueAnswerLetter;\n    // check if cell appears in a clue in the other direction\n    updateOrthogonalClueAnswer(cell, cell.answer, isAcrossClue);\n  }\n\n  // No answer in imported clue, insert default if cell is vacant.\n  // Don't clobber an existing value\n  else if (!cell.answer) {\n    // eslint-disable-next-line no-param-reassign\n    cell.answer = cellDefaultAnswer;\n  }\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/crossword-model.mjs?");

/***/ }),

/***/ "./src/default-eventbindings.mjs":
/*!***************************************!*\
  !*** ./src/default-eventbindings.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultKeyDownBinding: () => (/* binding */ defaultKeyDownBinding),\n/* harmony export */   defaultKeyUpBinding: () => (/* binding */ defaultKeyUpBinding)\n/* harmony export */ });\n/* harmony import */ var _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crossword-gridview.mjs */ \"./src/crossword-gridview.mjs\");\n\n\n// eventBinding = {eventName,keyBindings[keybinding,...]}\n// keybinding =  {key, action}\n// action = (controller, event, eventCell) => {...}\n\nconst defaultKeyDownBinding = {\n  eventName: 'keydown',\n  keyBindings: [\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.backspace,\n      action: (controller, event, eventCell) => {\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.deleteCellContent)(controller, event, eventCell);\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToCellBehind)(controller, eventCell);\n      },\n    },\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.delete,\n      action: (controller, event, eventCell) => {\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.deleteCellContent)(controller, event, eventCell);\n      },\n    },\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.enter,\n      action: (controller, event, eventCell) => {\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.toggleClueDirection)(controller, eventCell);\n      },\n    },\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.tab,\n      action: (controller, event, eventCell) => {\n        event.shiftKey\n          ? (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToClueBehind)(controller, eventCell)\n          : (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToClueAhead)(controller, eventCell);\n      },\n    },\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.space,\n      action: (controller, event, eventCell) => {\n        event.shiftKey\n          ? (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToCellBehind)(controller, eventCell)\n          : (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToCellAhead)(controller, eventCell);\n      },\n    },\n  ],\n};\n\nconst defaultKeyUpBinding = {\n  eventName: 'keyup',\n  keyBindings: [\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.left,\n      action: (controller, event, eventCell) => {\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToCellLeft)(controller, eventCell);\n      },\n    },\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.up,\n      action: (controller, event, eventCell) => {\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToCellUp)(controller, eventCell);\n      },\n    },\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.right,\n      action: (controller, event, eventCell) => {\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToCellRight)(controller, eventCell);\n      },\n    },\n    {\n      key: _crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.EventKey.down,\n      action: (controller, event, eventCell) => {\n        (0,_crossword_gridview_mjs__WEBPACK_IMPORTED_MODULE_0__.moveToCellDown)(controller, eventCell);\n      },\n    },\n  ],\n};\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/default-eventbindings.mjs?");

/***/ }),

/***/ "./src/helpers.mjs":
/*!*************************!*\
  !*** ./src/helpers.mjs ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClass: () => (/* binding */ addClass),\n/* harmony export */   addClasses: () => (/* binding */ addClasses),\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   ecs: () => (/* binding */ ecs),\n/* harmony export */   eid: () => (/* binding */ eid),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   memoize: () => (/* binding */ memoize),\n/* harmony export */   newPubSub: () => (/* binding */ newPubSub),\n/* harmony export */   removeClass: () => (/* binding */ removeClass),\n/* harmony export */   replaceStrAt: () => (/* binding */ replaceStrAt),\n/* harmony export */   setLetter: () => (/* binding */ setLetter),\n/* harmony export */   toHexString: () => (/* binding */ toHexString),\n/* harmony export */   toggleClass: () => (/* binding */ toggleClass),\n/* harmony export */   trace: () => (/* binding */ trace),\n/* harmony export */   tracing: () => (/* binding */ tracing)\n/* harmony export */ });\n// Lightweight helper functions.\n\n/**\n * **addClass** - add a [CSS](https://en.wikipedia.org/wiki/CSS) class to a\n * [DOM](https://en.wikipedia.org/wiki/Document_Object_Model) element.\n * @param {*} element the element (object reference)\n * @param {*} className the class to add (string)\n */\nfunction addClass(element, className) {\n  element.classList.add(className);\n}\nfunction addClasses(element, classNames) {\n  classNames.forEach((cn) => {\n    element.classList.add(cn);\n  });\n}\n\n/**\n * **assert** - logical constraint testing\n * @param condition - test expression (boolean)\n * @param message - (string) recorded on test failure - _condition_ evaluates to `false`.\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\n//// Shortcut functions\n\nconst eid = (elementId, dom = document) => {\n  return dom.getElementById(elementId);\n};\n\n// Returns an array of elements\nconst ecs = (elementClass, dom = document) => {\n  return dom.getElementsByClassName(elementClass);\n};\n\n/**\n * **first** - get the first element of an array\n * @param {*} array\n * @returns the first element of _array_ or null for empty,undefined or null array\n */\nfunction first(array) {\n  // If array is not nullish, return first element\n  return array ? array[0] : null;\n}\n\n/**\n * replaceStrAt - overlay **str** onto **original** string starting at **index**\n * @param original - the string to be mutated\n * @param index - the index of _original_ to start the overlay. Negative values supported like `string.slice()`.\n * @param str - the overlaying text\n * @returns the mutated _original_. Any null or undefined arguments returns _original_.\n * _index_ outside range [0,_original_.length) returns _original_.\n */\nfunction replaceStrAt(original, index, str) {\n  let result = original;\n  if (original && index != null && str) {\n    let pos = parseInt(index, 10);\n    if (pos < 0) {\n      // Normalise negative index values\n      pos = original.length + pos;\n    }\n    if (pos >= 0 && original.length > pos) {\n      result = `${original.slice(0, pos)}${str}${original.slice(\n        pos + str.length,\n      )}`;\n    }\n  }\n  return result;\n}\n\n/**\n * **last** - get the last element of an array\n * @param {*} array\n * @returns the last element of _array_ or null for empty,undefined or null array\n */\nfunction last(array) {\n  // If array is not nullish, return last element\n  return array ? array.slice(-1) : null;\n}\n\n/**\n * **memoize** - wrap an arbitrary, single-argument,\n * [idempotent](https://en.wikipedia.org/wiki/Idempotence)\n * function with result-caching.\n * Useful for [_expensive_](https://en.wikipedia.org/wiki/Analysis_of_algorithms) functions.\n * @param {*} fn the function to be [memoized](https://en.wikipedia.org/wiki/Memoization)\n * @returns a reference to the wrapped function. Assign this reference to a variable\n * and invoke in the same manner as a function.\n */\nconst memoize = (fn) => {\n  // A hopefully unique object property name/key!\n  const id = 'id_Z?7kQ;x8j!';\n  const cache = {};\n  return (arg) => {\n    if (!arg[id]) {\n      // Attach a random id property to this object\n      //  eslint-disable-next-line no-param-reassign\n      arg[id] = Math.random().toString(16).slice(2);\n    }\n\n    if (!(arg[id] in cache)) {\n      cache[arg[id]] = fn(arg);\n      trace(`memoize:caching id ${arg[id]}`);\n    }\n\n    return cache[arg[id]];\n  };\n};\n\n/**\n * **removeClass** - remove a [CSS](https://en.wikipedia.org/wiki/CSS) class from a\n * [DOM](https://en.wikipedia.org/wiki/Document_Object_Model) element.\n * @param {*} element the element (object reference)\n * @param {*} className the class to add (string)\n */\nfunction removeClass(element, className) {\n  element.classList.remove(className);\n}\n\n/**\n * setLetter - Set the _source_ letter at _index_ to _newLetter_. Pad _source_ if required.\n * @param {*} source string to be modified\n * @param {*} index target position in _source_\n * @param {*} newLetter replacement letter\n * @returns\n */\nfunction setLetter(source, index, newLetter) {\n  let result = source === null || source === undefined ? '' : source;\n  result = result.padEnd(index + 1, ' ');\n  return replaceStrAt(result, index, newLetter);\n}\n\n/**\n * **toggleClass** - _toggle_(add/remove) a [CSS](https://en.wikipedia.org/wiki/CSS) class on a\n * [DOM](https://en.wikipedia.org/wiki/Document_Object_Model) element.\n * @param {*} element the element (object reference)\n * @param {*} className the class to add (string)\n */\nfunction toggleClass(element, className) {\n  element.classList.toggle(className);\n}\n\n/**\n * toHexString - convert an object to a hexadecimal string\n * @param {} obj - object to be converted\n * @returns string of hexadecimal digits\n */\nconst toHexString = (obj) => {\n  // Fails for circular objects\n  return `0x${[...JSON.stringify(obj)]\n    .map((c, i) => str.charCodeAt(i).toString(16))\n    .join('')}`;\n};\n\n// module scope variable to toggle log tracing\nlet tracingEnabled = false;\n\n/**\n * **tracing** - enable or disable console logging\n * @param {*} enabled logging is on/off\n */\nconst tracing = (enabled) => {\n  tracingEnabled = enabled;\n};\n\n/**\n * trace - console logging\n * @param action - 'log', 'warn' or 'error'. Default is 'log'\n * @param message - string to be logged\n */\nconst trace = (message, action = 'log') => {\n  if (tracingEnabled) {\n    assert(\n      ['log', 'warn', 'error'].includes(action),\n      `Unsupported action'${action}'.`,\n    );\n    console[action](message);\n  }\n};\n\n// https://dev.to/adancarrasco/implementing-pub-sub-in-javascript-3l2e\n// Topics should only be modified from the eventRouter itself (return value of newPubSub)\nconst newPubSub = () => {\n  const topics = {};\n  const hOP = topics.hasOwnProperty;\n\n  return {\n    publish: (topic, info) => {\n      // No topics\n      if (!hOP.call(topics, topic)) return;\n\n      // Emit the message to any of the receivers\n      topics[topic].forEach((item) => {\n        // Send any arguments if specified\n        item(info !== undefined ? info : {});\n      });\n    },\n    subscribe: (topic, callback) => {\n      // Create the array of topics if not initialized yet\n      if (!hOP.call(topics, topic)) topics[topic] = [];\n\n      // We define the index where this receiver is stored in the topics array\n      const index = topics[topic].push(callback) - 1;\n\n      // When we subscribe we return an object to later remove the subscription\n      return {\n        remove: () => {\n          delete topics[topic][index];\n        },\n      };\n    },\n  };\n};\n\nfunction newEnum(values) {\n  const enumeration = {};\n  for (const val of values) {\n    enumeration[val] = val;\n  }\n  return Object.freeze(enumeration);\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/helpers.mjs?");

/***/ }),

/***/ "./src/index.mjs":
/*!***********************!*\
  !*** ./src/index.mjs ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CrosswordsJS: () => (/* binding */ CrosswordsJS)\n/* harmony export */ });\n/* harmony import */ var _crossword_model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crossword-model.mjs */ \"./src/crossword-model.mjs\");\n/* harmony import */ var _crossword_controller_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crossword-controller.mjs */ \"./src/crossword-controller.mjs\");\n\n\n\n//  Define our public API.\nconst CrosswordsJS = {\n  compileCrossword: _crossword_model_mjs__WEBPACK_IMPORTED_MODULE_0__.newCrosswordModel,\n  Controller: _crossword_controller_mjs__WEBPACK_IMPORTED_MODULE_1__.CrosswordController,\n};\n\n//  If we are in the browser, add the API to the global scope.\nif (typeof window !== 'undefined') {\n  window.CrosswordsJS = CrosswordsJS;\n}\n\n\n\n\n//# sourceURL=webpack://crosswords-js/./src/index.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.mjs");
/******/ 	
/******/ })()
;